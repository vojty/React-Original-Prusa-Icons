{"version":3,"sources":["lib/index.ts","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts","lib/favicons/OriginalPrusaIconsFavicon.tsx","lib/favicons/PrusaConnectFavicon.tsx","lib/icons/AdminIcon.tsx","lib/icons/ArrowDownIcon.tsx","lib/icons/ArrowLeftIcon.tsx","lib/icons/ArrowRightIcon.tsx","lib/icons/ArrowUpIcon.tsx","lib/icons/BackIcon.tsx","lib/icons/BackSimpleIcon.tsx","lib/icons/BrightnessIcon.tsx","lib/icons/CalibrateIcon.tsx","lib/icons/CalibrationVerticalIcon.tsx","lib/icons/CancelIcon.tsx","lib/icons/ControlIcon.tsx","lib/icons/CoverIcon.tsx","lib/icons/CycleIcon.tsx","lib/icons/DeleteIcon.tsx","lib/icons/DisableSteppersIcon.tsx","lib/icons/DisplayReplacement.tsx","lib/icons/DownloadIcon.tsx","lib/icons/EditIcon.tsx","lib/icons/ErrorIcon.tsx","lib/icons/EstimatedEndIcon.tsx","lib/icons/ExportIcon.tsx","lib/icons/ExposureTimes.tsx","lib/icons/FactoryReset.tsx","lib/icons/FanIcon.tsx","lib/icons/FastBackwardIcon.tsx","lib/icons/FastDownIcon.tsx","lib/icons/FastForwardIcon.tsx","lib/icons/FastUpIcon.tsx","lib/icons/FirmwareIcon.tsx","lib/icons/FolderIcon.tsx","lib/icons/FolderOpenedIcon.tsx","lib/icons/FolderSimple.tsx","lib/icons/FrequencyIcon.tsx","lib/icons/HeatedBedIcon.tsx","lib/icons/HomeIcon.tsx","lib/icons/HomePlatform.tsx","lib/icons/HomeResinTank.tsx","lib/icons/HomeSimpleIcon.tsx","lib/icons/HostnameIcon.tsx","lib/icons/HotspotIcon.tsx","lib/icons/ImportIcon.tsx","lib/icons/InfoIcon.tsx","lib/icons/LanIcon.tsx","lib/icons/LanguageIcon.tsx","lib/icons/LedSetReplacementIcon.tsx","lib/icons/LiveAdjustZArrowDownIcon.tsx","lib/icons/LiveAdjustZArrowUpIcon.tsx","lib/icons/LockIcon.tsx","lib/icons/LogsIcon.tsx","lib/icons/ManualIcon.tsx","lib/icons/MessageIcon.tsx","lib/icons/MinusIcon.tsx","lib/icons/MoveIcon.tsx","lib/icons/MoveTopIcon.tsx","lib/icons/NetworkIcon.tsx","lib/icons/NextIcon.tsx","lib/icons/NoWifiIcon.tsx","lib/icons/NokIcon.tsx","lib/icons/NozzleIcon.tsx","lib/icons/NozzleSimpleIcon.tsx","lib/icons/OkIcon.tsx","lib/icons/ParentFolderIcon.tsx","lib/icons/PauseIcon.tsx","lib/icons/PlatformSensitivityIcon.tsx","lib/icons/PlatformTankIcon.tsx","lib/icons/PlusSignIcon.tsx","lib/icons/PreheatIcon.tsx","lib/icons/PreviousIcon.tsx","lib/icons/PrintIcon.tsx","lib/icons/PrintingTime.tsx","lib/icons/ProgressBarIcon.tsx","lib/icons/ProgressIcon.tsx","lib/icons/QualityHighIcon.tsx","lib/icons/QualityLowIcon.tsx","lib/icons/QualityMediumIcon.tsx","lib/icons/QuestionmarkIcon.tsx","lib/icons/RefreshFolderIcon.tsx","lib/icons/RemainingTimeIcon.tsx","lib/icons/RemoteControlIcon.tsx","lib/icons/RestartIcon.tsx","lib/icons/ScanMeArrow.tsx","lib/icons/ScreensaverTimeoutIcon.tsx","lib/icons/SensorIcon.tsx","lib/icons/SettingsIcon.tsx","lib/icons/SmallArrowDownIcon.tsx","lib/icons/SmallArrowUpIcon.tsx","lib/icons/SpeedIcon.tsx","lib/icons/SpoolIcon.tsx","lib/icons/StopIcon.tsx","lib/icons/SwitchOffIcon.tsx","lib/icons/SwitchOnIcon.tsx","lib/icons/TemperatureIcon.tsx","lib/icons/TimeIcon.tsx","lib/icons/TouchscreenIcon.tsx","lib/icons/UsbFlashDriveIcon.tsx","lib/icons/WaitIcon.tsx","lib/icons/WarningIcon.tsx","lib/icons/WifiIcon.tsx","lib/icons/ZaxisIcon.tsx"],"names":["Scale","props","padding","Math","round","viewBox","DefaultPaddingRatio","withBackground","transform","withPadding","fill","backgroundColor","toString","width","abs","height","rx","backgroundRounded","backgroundRadius","ry","background","children","Svg","xmlns","fillRule","clipRule","imageRendering","shapeRendering","textRendering","ThemeSwitcherMonoColor","theme","setPrimaryColor","setBackgroundColor","Theme","CUSTOM","LIGHT","Color","DARK_GRAY","WHITE","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor","ORANGE","ThemeSwitcherDuoColor","setSecondaryColor","OriginalPrusaIconsFavicon","useState","fgColor","setFgColor","shadowColor","setShadowColor","bgColor","setBgColor","useEffect","SHADOW","id","d","defaultProps","name","componentName","description","tags","Tag","ICONS","FAVICON","folder","Folder","FAVICONS","PrusaConnectFavicon","CONNECT","AdminIcon","primaryColor","secondaryColor","SL1","DefaultRadiusRatio","ArrowDownIcon","MINI","ArrowLeftIcon","ArrowRightIcon","ArrowUpIcon","BackIcon","BackSimpleIcon","BrightnessIcon","CalibrateIcon","CalibrationVerticalIcon","CancelIcon","ControlIcon","CoverIcon","CycleIcon","DeleteIcon","DisableSteppersIcon","DisplayReplacementIcon","fill-rule","DownloadIcon","EditIcon","ErrorIcon","EstimatedEndIcon","ExportIcon","ExposureTimesIcon","FactoryResetTimesIcon","FanIcon","FastBackwardIcon","FastDownIcon","FastForwardIcon","FastUpIcon","FirmwareIcon","FolderIcon","FolderOpenedIcon","FolderSimpleIcon","FrequencyIcon","HeatedBedIcon","HomeIcon","HomePlatformIcon","HomeResinTankIcon","HomeSimpleIcon","OUTLINE","HostnameIcon","HotspotIcon","ImportIcon","InfoIcon","LanIcon","LanguageIcon","LedSetReplacementIcon","LiveAdjustZArrowDownIcon","LiveAdjustZArrowUpIcon","LockIcon","LogsIcon","ManualIcon","MessageIcon","MinusSignIcon","MoveIcon","MoveTopIcon","NetworkIcon","NextIcon","NoWifiIcon","NokIcon","NozzleIcon","TRANSPARENT","NozzleSimpleIcon","OkIcon","ParentFolderIcon","PauseIcon","PlatformSesitivityIcon","PlatformTankIcon","PlusSignIcon","PreheatIcon","PreviousIcon","PrintIcon","PrintingTimeIcon","ProgressBarIcon","ProgressIcon","QualityHighIcon","QualityLowIcon","QualityMediumIcon","QuestionmarkIcon","RefreshFolderIcon","RemainingTimeIcon","RemoteControlIcon","RestartIcon","ScanMeArrowIcon","ScreensaverTimeoutIcon","SensorIcon","SettingsIcon","SmallArrowDownIcon","SmallArrowUpIcon","SpeedIcon","SpoolIcon","StopIcon","SwitchOffIcon","SwitchOnIcon","TemperatureIcon","TimeIcon","TouchscreenIcon","UsbFlashDriveIcon","WaitingIcon","WarningIcon","WifiIcon","ZaxisIcon"],"mappings":"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","file":"static/js/0.c282a74b.chunk.js","sourcesContent":["export { default as AdminIcon } from './icons/AdminIcon'\nexport { default as ArrowDownIcon } from './icons/ArrowDownIcon'\nexport { default as ArrowLeftIcon } from './icons/ArrowLeftIcon'\nexport { default as ArrowRightIcon } from './icons/ArrowRightIcon'\nexport { default as ArrowUpIcon } from './icons/ArrowUpIcon'\nexport { default as BackIcon } from './icons/BackIcon'\nexport { default as BackSimpleIcon } from './icons/BackSimpleIcon'\nexport { default as BrightnessIcon } from './icons/BrightnessIcon'\nexport { default as CalibrateIcon } from './icons/CalibrateIcon'\nexport { default as CalibrationVerticalIcon } from './icons/CalibrationVerticalIcon'\nexport { default as CancelIcon } from './icons/CancelIcon'\nexport { default as ControlIcon } from './icons/ControlIcon'\nexport { default as CoverIcon } from './icons/CoverIcon'\nexport { default as CycleIcon } from './icons/CycleIcon'\nexport { default as DeleteIcon } from './icons/DeleteIcon'\nexport { default as DisableSteppersIcon } from './icons/DisableSteppersIcon'\nexport { default as DisplayReplacement } from './icons/DisplayReplacement'\nexport { default as DownloadIcon } from './icons/DownloadIcon'\nexport { default as EditIcon } from './icons/EditIcon'\nexport { default as ErrorIcon } from './icons/ErrorIcon'\nexport { default as EstimatedEndIcon } from './icons/EstimatedEndIcon'\nexport { default as ExportIcon } from './icons/ExportIcon'\nexport { default as ExposureTimes } from './icons/ExposureTimes'\nexport { default as FactoryReset } from './icons/FactoryReset'\nexport { default as FanIcon } from './icons/FanIcon'\nexport { default as FastBackwardIcon } from './icons/FastBackwardIcon'\nexport { default as FastDownIcon } from './icons/FastDownIcon'\nexport { default as FastForwardIcon } from './icons/FastForwardIcon'\nexport { default as FastUpIcon } from './icons/FastUpIcon'\nexport { default as FirmwareIcon } from './icons/FirmwareIcon'\nexport { default as FolderIcon } from './icons/FolderIcon'\nexport { default as FolderOpenedIcon } from './icons/FolderOpenedIcon'\nexport { default as FolderSimple } from './icons/FolderSimple'\nexport { default as FrequencyIcon } from './icons/FrequencyIcon'\nexport { default as HeatedBedIcon } from './icons/HeatedBedIcon'\nexport { default as HomeIcon } from './icons/HomeIcon'\nexport { default as HomePlatform } from './icons/HomePlatform'\nexport { default as HomeResinTank } from './icons/HomeResinTank'\nexport { default as HomeSimpleIcon } from './icons/HomeSimpleIcon'\nexport { default as HostnameIcon } from './icons/HostnameIcon'\nexport { default as HotspotIcon } from './icons/HotspotIcon'\nexport { default as ImportIcon } from './icons/ImportIcon'\nexport { default as InfoIcon } from './icons/InfoIcon'\nexport { default as LanguageIcon } from './icons/LanguageIcon'\nexport { default as LanIcon } from './icons/LanIcon'\nexport { default as LedSetReplacementIcon } from './icons/LedSetReplacementIcon'\nexport { default as LiveAdjustZArrowDownIcon } from './icons/LiveAdjustZArrowDownIcon'\nexport { default as LiveAdjustZArrowUpIcon } from './icons/LiveAdjustZArrowUpIcon'\nexport { default as LockIcon } from './icons/LockIcon'\nexport { default as LogsIcon } from './icons/LogsIcon'\nexport { default as ManualIcon } from './icons/ManualIcon'\nexport { default as MessageIcon } from './icons/MessageIcon'\nexport { default as MinusIcon } from './icons/MinusIcon'\nexport { default as MoveIcon } from './icons/MoveIcon'\nexport { default as MoveTopIcon } from './icons/MoveTopIcon'\nexport { default as NetworkIcon } from './icons/NetworkIcon'\nexport { default as NextIcon } from './icons/NextIcon'\nexport { default as NokIcon } from './icons/NokIcon'\nexport { default as NoWifiIcon } from './icons/NoWifiIcon'\nexport { default as NozzleIcon } from './icons/NozzleIcon'\nexport { default as NozzleSimpleIcon } from './icons/NozzleSimpleIcon'\nexport { default as OkIcon } from './icons/OkIcon'\nexport { default as ParentFolderIcon } from './icons/ParentFolderIcon'\nexport { default as PauseIcon } from './icons/PauseIcon'\nexport { default as PlatformSensitivityIcon } from './icons/PlatformSensitivityIcon'\nexport { default as PlatformTankIcon } from './icons/PlatformTankIcon'\nexport { default as PlusSignIcon } from './icons/PlusSignIcon'\nexport { default as PreheatIcon } from './icons/PreheatIcon'\nexport { default as PreviousIcon } from './icons/PreviousIcon'\nexport { default as PrintIcon } from './icons/PrintIcon'\nexport { default as PrintingTime } from './icons/PrintingTime'\nexport { default as ProgressBarIcon } from './icons/ProgressBarIcon'\nexport { default as ProgressIcon } from './icons/ProgressIcon'\nexport { default as QualityHighIcon } from './icons/QualityHighIcon'\nexport { default as QualityLowIcon } from './icons/QualityLowIcon'\nexport { default as QualityMediumIcon } from './icons/QualityMediumIcon'\nexport { default as QuestionmarkIcon } from './icons/QuestionmarkIcon'\nexport { default as RefreshFolderIcon } from './icons/RefreshFolderIcon'\nexport { default as RemainingTimeIcon } from './icons/RemainingTimeIcon'\nexport { default as RemoteControlIcon } from './icons/RemoteControlIcon'\nexport { default as RestartIcon } from './icons/RestartIcon'\nexport { default as ScanMeArrow } from './icons/ScanMeArrow'\nexport { default as ScreensaverTimeoutIcon } from './icons/ScreensaverTimeoutIcon'\nexport { default as SensorIcon } from './icons/SensorIcon'\nexport { default as SettingsIcon } from './icons/SettingsIcon'\nexport { default as SmallArrowDownIcon } from './icons/SmallArrowDownIcon'\nexport { default as SmallArrowUpIcon } from './icons/SmallArrowUpIcon'\nexport { default as SpeedIcon } from './icons/SpeedIcon'\nexport { default as SpoolIcon } from './icons/SpoolIcon'\nexport { default as StopIcon } from './icons/StopIcon'\nexport { default as SwitchOffIcon } from './icons/SwitchOffIcon'\nexport { default as SwitchOnIcon } from './icons/SwitchOnIcon'\nexport { default as TemperatureIcon } from './icons/TemperatureIcon'\nexport { default as TimeIcon } from './icons/TimeIcon'\nexport { default as TouchscreenIcon } from './icons/TouchscreenIcon'\nexport { default as UsbFlashDriveIcon } from './icons/UsbFlashDriveIcon'\nexport { default as WaitIcon } from './icons/WaitIcon'\nexport { default as WarningIcon } from './icons/WarningIcon'\nexport { default as WifiIcon } from './icons/WifiIcon'\nexport { default as ZaxisIcon } from './icons/ZaxisIcon'\nexport { default as OriginalPrusaIconsFavicon } from './favicons/OriginalPrusaIconsFavicon'\nexport { default as PrusaConnectFavicon } from './favicons/PrusaConnectFavicon'\n","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}","import { Color, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\n\r\ninterface IProps extends IconDetail {\r\n    fgColor?: Color,\r\n    shadowColor?: Color,\r\n    bgColor?: Color\r\n}\r\n\r\nconst OriginalPrusaIconsFavicon = (props: IProps) => {\r\n\r\n    const [fgColor, setFgColor] = useState<Color | string | undefined>(props.fgColor)\r\n    const [shadowColor, setShadowColor] = useState<Color | string | undefined>(props.shadowColor)\r\n    const [bgColor, setBgColor] = useState<Color | string | undefined>(props.bgColor)\r\n\r\n\r\n    useEffect(() => {\r\n        switch (props.theme) {\r\n            case Theme.CUSTOM:\r\n                setFgColor(props.fgColor)\r\n                setShadowColor(props.shadowColor)\r\n                setBgColor(props.bgColor)\r\n                break\r\n            case Theme.LIGHT:\r\n                setFgColor(Color.WHITE)\r\n                setShadowColor(Color.SHADOW)\r\n                setBgColor(Color.ORANGE)\r\n                break\r\n            case Theme.DARK:\r\n                setFgColor(Color.WHITE)\r\n                setShadowColor(Color.SHADOW)\r\n                setBgColor(Color.ORANGE)\r\n                break\r\n            case Theme.GRAYSCALE:\r\n                setFgColor(Color.WHITE)\r\n                setShadowColor(Color.SHADOW)\r\n                setBgColor(Color.GRAY)\r\n                break\r\n            case Theme.MONOCHROME:\r\n                setFgColor(Color.WHITE)\r\n                setShadowColor(Color.BLACK)\r\n                setBgColor(Color.BLACK)\r\n                break\r\n        }\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <svg id=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} viewBox=\"0 0 62.38 62.38\" fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\">\r\n            <path fill={bgColor} d=\"M0 0h62.38v62.38H0z\" />\r\n            <g fillRule=\"nonzero\">\r\n                <path fill={shadowColor} d=\"M27.29 52.95h10.37V13.12H27.29z\" />\r\n                <path fill={fgColor} d=\"M25.44 51.1h10.38V11.27H25.44z\" />\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default OriginalPrusaIconsFavicon\r\n\r\nOriginalPrusaIconsFavicon.defaultProps = {\r\n    name: 'Original Prusa Icons favicon',\r\n    componentName: OriginalPrusaIconsFavicon.name,\r\n    description: 'The favicon for ORIGINAL PRUSA ICONS library.',\r\n    tags: [Tag.ICONS, Tag.FAVICON],\r\n\r\n    folder: Folder.FAVICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    Theme: Theme.LIGHT,\r\n\r\n    fgColor: Color.WHITE,\r\n    shadowColor: Color.SHADOW,\r\n    bgColor: Color.ORANGE\r\n}","import { Color, Folder, Tag, Theme } from '../config'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport React from 'react'\r\n\r\ninterface IProps extends IconDetail {\r\n    fgColor?: string,\r\n    shadowColor?: string,\r\n    bgColor?: string\r\n}\r\n\r\nconst PrusaConnectFavicon = (props: IProps) => {\r\n    return (\r\n        <svg id=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox=\"0 0 50.68 50.68\">\r\n            <path fill={props.bgColor} d=\"M0 0h50.68v50.68H0z\" />\r\n            <path fill={props.shadowColor} fillRule=\"nonzero\" d=\"M42.3 22.22c-.23-7.8-7.75-12.24-14.78-12.24-9.84 0-16.14 7.48-16.14 16.86 0 9.38 6.3 16.86 16.14 16.86 8.2 0 14.28-4.85 14.78-13.24h-8.43c-.32 3.76-2.54 5.98-6.53 5.98-5.44 0-7.52-4.76-7.52-9.61s2.09-9.61 7.52-9.61c3.58 0 6.03 1.72 6.53 4.99h8.43z\" />\r\n            <path fill={props.fgColor} fillRule=\"nonzero\" d=\"M40.8 20.72c-.23-7.8-7.75-12.24-14.78-12.24-9.84 0-16.14 7.48-16.14 16.86 0 9.38 6.3 16.86 16.14 16.86 8.2 0 14.28-4.85 14.78-13.24h-8.43c-.32 3.76-2.54 5.98-6.53 5.98-5.44 0-7.52-4.76-7.52-9.61s2.09-9.61 7.52-9.61c3.58 0 6.03 1.72 6.53 4.99h8.43z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default PrusaConnectFavicon\r\n\r\nPrusaConnectFavicon.defaultProps = {\r\n    name: 'Prusa Connect favicon',\r\n    componentName: 'PrusaConnectFavicon',\r\n    description: 'The favicon for PRUSA CONNECT project.',\r\n    tags: [Tag.CONNECT, Tag.FAVICON],\r\n\r\n    folder: Folder.FAVICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    Theme: Theme.LIGHT,\r\n\r\n    fgColor: Color.WHITE,\r\n    shadowColor: Color.SHADOW,\r\n    bgColor: Color.ORANGE\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst AdminIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M675.05 646.87c0,14.92 -12.06,27.56 -27.56,27.56 -14.92,0 -27.56,-12.06 -27.56,-27.56 0,-14.92 12.06,-27.56 27.56,-27.56 14.92,0 27.56,12.06 27.56,27.56z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M648.06 759.41c-29.85,0 -58,-11.49 -78.66,-32.73l-265.84 -265.83c-12.06,-12.06 -28.7,-18.38 -45.94,-16.64 -59.14,4.6 -117.13,-16.64 -159.05,-58.57 -45.36,-45.36 -58.57,-98.76 -58.57,-144.11 0,-49.37 15.5,-90.71 22.39,-105.08l131.49 131.5c16.64,-1.15 39.62,-16.07 56.26,-36.17 10.92,-13.21 17.23,-27.56 18.38,-37.9l-131.5 -131.49c29.85,-12.63 70.62,-22.39 106.23,-22.39 53.97,0 105.08,21.24 142.96,59.14 41.91,41.91 63.15,99.91 58.57,159.05 -1.15,17.23 4.6,33.88 16.64,45.36l265.83 265.84c21.82,21.81 32.73,50.53 32.73,79.24 0,28.13 -10.92,56.26 -32.16,78.09 -21.24,21.82 -49.38,33.3 -79.81,33.3l0 0 0.03 -0.6zm-385.84 -375.51c31.01,0 61.44,12.63 83.82,34.45l265.84 265.83c19.52,19.52 53.97,19.52 73.5,-0.57 9.75,-9.75 14.92,-22.96 14.92,-37.33 -0.57,-13.21 -5.74,-25.84 -14.92,-35.59l-265.84 -265.84c-24.7,-24.12 -36.74,-58 -34.45,-92.45 3.45,-41.91 -12.06,-82.68 -41.34,-111.97 -22.96,-22.96 -52.25,-36.74 -83.82,-40.76l64.89 64.88c6.89,32.16 4.03,64.32 -28.13,103.92 -33.3,41.34 -77.52,66.6 -131.49,55.12l-64.89 -64.88c4.02,31.01 17.8,60.86 40.77,83.82 29.28,29.85 70.61,44.79 111.97,41.34l9.18 -0.57 0 0 0 0.6z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default AdminIcon\r\n\r\nAdminIcon.defaultProps = {\r\n    name: 'Admin icon',\r\n    componentName: 'AdminIcon',\r\n    description: 'Wrench icon for entering to administration area.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3997.6\r\n\r\nconst ArrowDownIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M3997.6 1220.67L3526.68 749.75 1998.26 2305.02 470.92 749.75 0 1220.67 1998.26 3247.85z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ArrowDownIcon\r\n\r\nArrowDownIcon.defaultProps = {\r\n    name: 'Arrow down icon',\r\n    componentName: 'ArrowDownIcon',\r\n    description: 'Arrow down icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst ArrowLeftIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M252.6 0L295.44 42.84 153.97 181.87 295.44 320.81 252.6 363.64 68.2 181.87z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ArrowLeftIcon\r\n\r\nArrowLeftIcon.defaultProps = {\r\n    name: 'Arrow left icon',\r\n    componentName: 'ArrowLeftIcon',\r\n    description: 'Arrow left icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.25\r\n\r\nconst ArrowRightIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M71.85 0L44.13 27.72 135.67 117.68 44.13 207.58 71.85 235.29 191.16 117.68z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ArrowRightIcon\r\n\r\nArrowRightIcon.defaultProps = {\r\n    name: 'Arrow right icon',\r\n    componentName: 'ArrowRightIcon',\r\n    description: 'Arrow right icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.06\r\n\r\nconst ArrowUpIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M800.06 555.76L705.82 650.01 399.92 338.75 94.25 650.01 0 555.76 399.92 150.05z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ArrowUpIcon\r\n\r\nArrowUpIcon.defaultProps = {\r\n    name: 'Arrow up icon',\r\n    componentName: 'ArrowUpIcon',\r\n    description: 'Arrow up icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst BackIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M170.31 50.22l-85.72 0 0 -34.84 -69.2 62.14 69.2 64.77 0 -34.6 85.72 0c35.44,0 64.17,27.18 64.17,62.62 0,35.44 -28.74,64.29 -64.17,64.29l-85.72 0 0 57.71 85.72 0c67.4,0 122,-54.6 122,-122 0,-67.4 -54.6,-120.08 -122,-120.08z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n\r\nBackIcon.defaultProps = {\r\n    name: 'Back icon',\r\n    componentName: 'BackIcon',\r\n    description: 'Back navigation icon.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst BackSimpleIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M571.43 170.27L255.45 170.27 255.45 29.45 0 280.68 255.45 541.98 255.45 402.02 571.43 402.02z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default BackSimpleIcon\r\n\r\nBackSimpleIcon.defaultProps = {\r\n    name: 'Back simple icon',\r\n    componentName: 'BackSimpleIcon',\r\n    description: 'Back navigation icon.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.44\r\n\r\nconst BrightnessIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M117.72 186.34c-3.38,0 -6.56,-0.31 -9.84,-0.82l0 49.81 19.59 0 0 -49.81c-3.18,0.41 -6.46,0.82 -9.84,0.82l0.1 0zm0 -117.67c-27.07,0 -49.02,21.93 -49.02,48.99 0,27.06 21.94,48.99 49.02,48.99 27.07,0 49.02,-21.93 49.02,-48.99 0,-27.06 -21.94,-48.99 -49.02,-48.99zm0 19.58c16.2,0 29.43,13.22 29.43,29.42 0,16.2 -13.23,29.42 -29.43,29.42l0 -0.1c-16.2,0 -29.33,-13.12 -29.33,-29.31 0,-16.2 13.13,-29.31 29.33,-29.31l0 -0.1 0 0zm-41.02 -25.52l-35.27 -35.26 -13.84 13.84 35.27 35.26c3.9,-5.23 8.61,-9.94 13.84,-13.84l0 0zm41.02 -13.74c3.38,0 6.56,0.31 9.84,0.82l0 -49.81 -19.59 0 0 49.81c3.18,-0.41 6.46,-0.82 9.84,-0.82l-0.1 0zm54.86 27.57l35.27 -35.26 -13.84 -13.84 -35.27 35.26c5.23,3.89 9.95,8.61 13.84,13.84zm-123.56 41c0,-3.38 0.31,-6.56 0.82,-9.84l-49.84 0 0 19.58 49.84 0c-0.41,-3.18 -0.82,-6.46 -0.82,-9.84l0 0.1zm109.72 54.84l35.27 35.26 13.84 -13.84 -35.27 -35.26c-4,5.23 -8.61,9.94 -13.84,13.84zm-95.98 -13.84l-35.27 35.26 13.84 13.84 35.27 -35.26c-5.23,-3.89 -9.95,-8.61 -13.84,-13.84zm122.74 -50.84c0.41,3.18 0.82,6.46 0.82,9.84 0,3.38 -0.31,6.56 -0.82,9.84l49.84 0 0 -19.58 -49.84 0 0 -0.1z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M117.72 117.77l0 -29.31c-16.2,0 -29.33,13.12 -29.33,29.31 0,16.2 13.13,29.31 29.33,29.31l0 -29.31z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default BrightnessIcon\r\n\r\nBrightnessIcon.defaultProps = {\r\n    name: 'Brightness icon',\r\n    componentName: 'BrightnessIcon',\r\n    description: 'Icon for brightness settings.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.65\r\n\r\nconst CalibrateIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M181.83 116.31c36.19,0 65.51,29.33 65.51,65.51l-65.51 0 0 -65.51zm0 131.02c-36.18,0 -65.51,-29.33 -65.51,-65.51l65.51 0 0 65.51z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M169.03 21.27c-78.74,6.19 -141.56,69 -147.76,147.73l-8.45 -0c-7.07,0 -12.81,5.74 -12.81,12.82 0,7.07 5.74,12.81 12.81,12.81l8.45 0c6.2,78.73 69.01,141.54 147.73,147.75l-0 8.47c0,7.07 5.74,12.81 12.82,12.81 7.07,0 12.81,-5.74 12.81,-12.81l0 -8.47c78.72,-6.2 141.53,-69.01 147.74,-147.72l8.47 0c7.07,0 12.81,-5.74 12.81,-12.82 0,-7.07 -5.74,-12.81 -12.81,-12.81l-8.46 -0c-6.19,-78.73 -69,-141.54 -147.72,-147.75l0 -8.46c0,-7.07 -5.74,-12.81 -12.82,-12.81 -7.07,0 -12.81,5.74 -12.81,12.81l-0 8.45zm12.8 95.04c-36.18,0 -65.51,29.33 -65.51,65.51l65.51 0 0 -65.51zm0 131.02c36.19,0 65.51,-29.33 65.51,-65.51l-65.51 0 0 65.51zm12.81 -169.77c0,7.08 -5.74,12.82 -12.81,12.82 -7.08,0 -12.82,-5.74 -12.82,-12.82l0.01 -29.35c-63.78,6.07 -114.72,57.01 -120.79,120.79l29.34 0.01c7.08,0 12.82,5.74 12.82,12.81 0,7.08 -5.74,12.82 -12.82,12.82l-29.35 -0.01c6.08,63.78 57.02,114.71 120.79,120.77l0.01 -29.33c0,-7.08 5.74,-12.82 12.81,-12.82 7.08,0 12.82,5.74 12.82,12.82l-0.01 29.33c63.77,-6.08 114.7,-57 120.78,-120.77l-29.34 -0.01c-7.08,0 -12.82,-5.74 -12.82,-12.81 0,-7.08 5.74,-12.82 12.82,-12.82l29.33 0.01c-6.07,-63.78 -56.99,-114.72 -120.77,-120.8l-0.01 29.35z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default CalibrateIcon\r\n\r\nCalibrateIcon.defaultProps = {\r\n    name: 'Calibrate icon',\r\n    componentName: 'CalibrateIcon',\r\n    description: 'Calibrate icon for FDM printers.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst CalibrationVerticalIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M105.92 237.47L105.92 117.42 149.58 117.42 89.51 37.38 29.45 117.5 73.19 117.5 73.19 248.32 29.45 248.32 89.51 328.44 149.66 248.32 105.92 248.32z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M335 19.23l-109.12 0 0 327.27 109.12 0 0 -327.27zm-81.85 300.01l0 -27.26 27.26 0 0 -13.63 -27.26 0 0 -27.26 40.89 0 0 -13.63 -40.89 0 0 -27.26 27.26 0 0 -13.63 -27.26 0 0 -27.26 27.26 0 0 -13.63 -27.26 0 0 -27.26 40.89 0 0 -13.63 -40.89 0 0 -27.26 27.26 0 0 -13.63 -27.26 0 0 -27.26 54.52 0 0 272.75 -54.52 0 0 -0.16z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default CalibrationVerticalIcon\r\n\r\nCalibrationVerticalIcon.defaultProps = {\r\n    name: 'Calibration Vertical icon',\r\n    componentName: 'CalibrationVerticalIcon',\r\n    description: 'Icon for vertical calibration.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst CancelIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M158.22 145.9L128.64 117.65 158.22 88.07 145.9 77.08 117.65 106.65 88.07 77.08 77.08 89.4 106.65 117.65 77.08 147.22 89.4 158.22 117.65 128.64 147.22 158.22z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M117.65 33.09c-47.02,0 -84.56,37.54 -84.56,84.56 0,47.02 37.54,84.56 84.56,84.56 47.02,0 84.56,-37.54 84.56,-84.56 0,-47.02 -37.54,-84.56 -84.56,-84.56zm0 13.84c38.49,0 70.72,32.04 70.72,70.72 0,38.49 -32.04,70.72 -70.72,70.72 -38.49,0 -70.72,-32.04 -70.72,-70.72 0,-38.49 32.04,-70.72 70.72,-70.72z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default CancelIcon\r\n\r\nCancelIcon.defaultProps = {\r\n    name: 'Cancel Icon',\r\n    componentName: 'CancelIcon',\r\n    description: 'Universal cancel icon.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst ControlIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M3336.74 2099.8c0,-83.18 -67.86,-149.66 -149.64,-149.66 -83.16,0 -149.28,67.86 -149.28,149.66 0,83.16 67.86,149.28 149.28,149.28 83.16,0 149.64,-67.86 149.64,-149.28zm-2250.84 -2099.8l175.76 0c-69.44,351.84 118.64,408.18 405.02,462.1 220.3,41.76 469.78,93.96 469.78,493.12l0 95.34 -177.12 0 0 -95.34c0,-234.2 -72.36,-271.08 -325.02,-318.76 -388.34,-72.38 -614.56,-208.1 -548.42,-636.46l0 0zm-26.08 1200.24l1884.04 1.38c468.4,17.04 841.12,413.06 841.12,898.18 0,496.24 -391.16,899.88 -873.48,899.88 -226.54,0 -432.88,-89.42 -588.44,-234.18 -95.72,-89.44 -214,-132.58 -332.68,-132.58 -126.3,0 -251.24,47.66 -349.72,137.1 -154.18,141.64 -359.14,229.66 -582.22,229.66 -482.3,0 -873.46,-403.64 -873.46,-899.88 0,-496.24 391.16,-899.92 873.46,-899.92l0 0 1.76 0 -0.38 0.36zm0 300.3c-316,0 -573.14,269.68 -573.14,599.26 0,331.28 257.14,599.26 573.14,599.26 138.48,0 274.2,-52.54 378.96,-149.64 152.4,-140.24 348.32,-217.16 552.96,-217.16 200.1,0 391.16,75.54 537.64,214.02 106.5,98.48 241.86,154.16 383.48,154.16 315.98,0 573.14,-269.7 573.14,-599.26 0,-321.9 -240.46,-585.34 -548.42,-599.26l-1878.14 0 0 -1.38 0.38 0zm1676.28 599.26c0,-83.18 -67.86,-149.66 -149.66,-149.66 -83.16,0 -149.26,67.86 -149.26,149.66 0,83.16 67.86,149.28 149.26,149.28 83.18,0 149.66,-67.86 149.66,-149.28zm300.34 300.64c0,-83.16 -67.86,-149.28 -149.28,-149.28 -83.18,0 -149.3,67.86 -149.3,149.28 0,83.18 67.86,149.28 149.3,149.28 83.16,0 149.28,-67.88 149.28,-149.28z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M1535.86 1950.48l-298.92 0 0 -300.3 -300.68 0 0 300.3 -300.3 0 0 300.34 300.3 -1.4 0 300.32 300.68 0 0 -300.32 298.92 0 0 -298.94zm1200.24 -151.04c0,83.18 67.86,149.3 149.28,149.3 83.16,0 149.26,-67.86 149.26,-149.3 0,-83.16 -67.86,-149.26 -149.26,-149.26 -83.16,0 -149.28,67.86 -149.28,149.26z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ControlIcon\r\n\r\nControlIcon.defaultProps = {\r\n    name: 'Control Icon',\r\n    componentName: 'ControlIcon',\r\n    description: 'Icon for control printer movement.',\r\n    tags: [Tag.ICONS, Tag.SL1, Tag.CONNECT],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst CoverIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M104.05 102.65L174.98 102.65 219.63 395.56 372 395.56 372 546.6 104.05 546.6z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M371.74 32.31L185.79 97.39 324.67 359.12 468.49 308.78z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default CoverIcon\r\n\r\nCoverIcon.defaultProps = {\r\n    name: 'Cover Icon',\r\n    componentName: 'CoverIcon',\r\n    description: 'Icon with SLA printer cover.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.36\r\n\r\nconst CycleIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} fillRule=\"nonzero\" d=\"M289.72 0.06c11.11,0.53 21.75,3.13 31.43,7.41 10,4.42 19.04,10.66 26.66,18.29 8.11,8.1 14.65,17.79 19.09,28.53 4.31,10.38 6.68,21.74 6.68,33.61l0 118.69 49.19 0 -70.22 140.5 -70.27 -140.5 49.18 0 0 -118.7c0,-6.2 -1.24,-12.13 -3.45,-17.49 -2.33,-5.6 -5.75,-10.66 -9.95,-14.86 -4.21,-4.22 -9.27,-7.64 -14.86,-9.95 -5.39,-2.22 -11.3,-3.47 -17.51,-3.47 -6.21,0 -12.14,1.24 -17.51,3.46 -5.57,2.3 -10.63,5.73 -14.85,9.95 -4.22,4.22 -7.64,9.28 -9.95,14.85 -2.21,5.37 -3.45,11.3 -3.45,17.51l0 395.59c0,6.21 1.24,12.13 3.45,17.49 2.33,5.6 5.75,10.66 9.95,14.86 4.21,4.22 9.27,7.65 14.86,9.95 5.38,2.22 11.3,3.47 17.51,3.47 6.2,0 12.12,-1.24 17.48,-3.45 5.61,-2.33 10.68,-5.76 14.88,-9.96 4.2,-4.21 7.63,-9.28 9.95,-14.88 2.21,-5.35 3.46,-11.28 3.46,-17.48l0 -98.07 42.13 0 0 98.07c0,11.87 -2.37,23.23 -6.68,33.61 -4.45,10.76 -11,20.45 -19.07,28.52 -8.09,8.08 -17.79,14.64 -28.53,19.08 -10.38,4.3 -21.74,6.68 -33.61,6.68 -11.86,0 -23.23,-2.37 -33.59,-6.67 -10.77,-4.45 -20.46,-11 -28.54,-19.08 -8.08,-8.09 -14.64,-17.79 -19.08,-28.53 -4.3,-10.38 -6.68,-21.74 -6.68,-33.61l0 -395.59c0,-11.87 2.37,-23.23 6.68,-33.61 4.46,-10.75 11,-20.45 19.07,-28.52 8.09,-8.08 17.79,-14.64 28.53,-19.08 10.38,-4.31 21.74,-6.68 33.61,-6.68l4.03 0.06z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default CycleIcon\r\n\r\nCycleIcon.defaultProps = {\r\n    name: 'Cycle icon',\r\n    componentName: 'CycleIcon',\r\n    description: 'Icon for cyclic change of value.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst DeleteIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M518.59 310.05c0,-16.67 -13.81,-30.5 -30.5,-30.5 -16.67,0 -30.5,13.81 -30.5,30.5l0 270.21c0,16.67 13.81,30.5 30.5,30.5 16.67,0 30.5,-13.81 30.5,-30.5l0 -270.21zm-179.74 0c0,-16.67 -13.81,-30.5 -30.5,-30.5 -16.67,0 -30.5,13.81 -30.5,30.5l0 270.21c0,16.67 13.81,30.5 30.5,30.5 16.67,0 30.5,-13.81 30.5,-30.5l0 -270.21z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M608.9 760l-419.46 0c-33.36,0 -59.97,-26.45 -59.97,-59.97l0 -509.76 -29.48 0 0 -59.98 179.74 0 0 -45.14c0,-24.6 20.55,-45.14 45.14,-45.14l150.26 0c24.59,0 45.14,19.72 45.14,45.14l0 45.14 179.74 0 0 59.98 -29.48 0 0 509.76c0,33.35 -26.45,59.97 -59.97,59.97l0 0 -2.02 0 0.36 0zm-150.27 -660.02l-119.78 0 0 30.33 119.78 0 0 -30.33zm150.27 90.28l-419.46 0 0 495.09c0,7.93 6.91,14.67 14.66,14.67l389.98 0c7.93,0 14.67,-6.91 14.67,-14.67l0 -495.09 0 0 0.15 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default DeleteIcon\r\n\r\nDeleteIcon.defaultProps = {\r\n    name: 'Delete icon',\r\n    componentName: 'DeleteIcon',\r\n    description: 'Trash icon for delete action.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst DisableSteppersIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M94.31 73.13c0.06,7.24 0.9,11.56 -3.32,15.42 -4.22,3.86 -8.53,2.64 -15.64,1.96l-5.66 12.13c5.15,5.09 8.82,7.53 8.56,13.26 -0.26,5.7 -4.09,7.82 -9.69,12.42l4.6 12.62c7.18,-0.06 11.56,-0.9 15.42,3.32 3.86,4.22 2.64,8.5 1.96,15.64l12.13 5.66c5.09,-5.15 7.56,-8.82 13.23,-8.56 5.73,0.26 7.88,4.12 12.49,9.69l12.59 -4.57c-0.06,-7.24 -0.9,-11.56 3.32,-15.42 4.22,-3.86 8.5,-2.64 15.64,-1.96l5.66 -12.13c-5.05,-4.96 -8.82,-7.5 -8.56,-13.26 0.26,-5.7 4.15,-7.85 9.69,-12.42l-4.6 -12.62c-7.21,0.06 -11.56,0.9 -15.42,-3.28 -3.86,-4.22 -2.64,-8.5 -1.96,-15.64l-12.13 -5.66c-5.09,5.15 -7.53,8.82 -13.26,8.56 -5.7,-0.26 -7.85,-4.12 -12.42,-9.69l-12.59 4.6 -0.03 -0.07zm-1.48 -34.7c7.85,-2.48 16.22,-3.8 24.88,-3.8 45.8,0 82.98,37.18 82.98,82.98 0,45.8 -37.18,82.98 -82.98,82.98 -45.8,0 -82.98,-37.18 -82.98,-82.98 0,-17.61 5.54,-33.89 14.9,-47.32l18.28 14.13 0 -54.59 -49.89 16.06 18.44 14.26c-11.52,16.25 -18.35,36.05 -18.35,57.49 0,54.94 44.61,99.56 99.56,99.56 54.94,0 99.46,-44.61 99.46,-99.56 0,-54.94 -44.52,-99.56 -99.46,-99.56 -8.59,0 -16.93,1.1 -24.88,3.15l0 17.25 0.03 -0.07zm24.82 56.26c12.65,0 22.92,10.27 22.92,22.92 0,12.65 -10.27,22.92 -22.92,22.92 -12.65,0 -22.92,-10.27 -22.92,-22.92 0,-12.65 10.27,-22.92 22.92,-22.92z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M11.75 206.81L206.84 11.72 223.51 28.39 28.42 223.48z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default DisableSteppersIcon\r\n\r\nDisableSteppersIcon.defaultProps = {\r\n    name: 'Disable Steppers Icon',\r\n    componentName: 'DisableSteppersIcon',\r\n    description: 'Icon for disabling stepper motors.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst DisplayReplacementIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M0 89.38L363.64 89.38 363.64 60.28 0 60.28z\" />\r\n                <path fill={primaryColor?.toString()} fill-rule=\"nonzero\" d=\"M115.15 243.55c1.57,4.56 -0.9,9.54 -5.46,11.11 -4.56,1.57 -9.54,-0.9 -11.11,-5.46l-44.14 -129.06c-1.57,-4.56 0.9,-9.54 5.46,-11.11 4.56,-1.57 9.54,0.9 11.11,5.46l44.15 129.06zm-17.99 54.77l169.31 0 0 -29.1 -169.31 0 0 29.1zm167.89 -49.18c-1.57,4.56 -6.51,7.03 -11.11,5.46 -4.56,-1.57 -7.03,-6.51 -5.46,-11.11l44.15 -129.06c1.57,-4.56 6.5,-7.03 11.11,-5.46 4.56,1.57 7.03,6.51 5.46,11.11l-44.14 129.06zm-35.69 -133.09c0.66,-4.79 5.12,-8.12 9.92,-7.45 4.79,0.66 8.12,5.13 7.45,9.92l-18.8 129.06c-0.66,4.79 -5.13,8.12 -9.92,7.45 -4.79,-0.66 -8.12,-5.12 -7.45,-9.92l18.8 -129.06zm-38.78 130.29c0,4.84 -3.94,8.78 -8.78,8.78 -4.84,0 -8.78,-3.94 -8.78,-8.78l0 -129.06c0,-4.84 3.94,-8.78 8.78,-8.78 4.84,0 8.78,3.94 8.78,8.78l0 129.06zm-37.5 -1.23c0.66,4.79 -2.66,9.21 -7.45,9.92 -4.79,0.66 -9.21,-2.66 -9.92,-7.45l-18.8 -129.06c-0.66,-4.79 2.66,-9.21 7.45,-9.92 4.79,-0.66 9.21,2.66 9.92,7.45l18.8 129.06z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default DisplayReplacementIcon\r\n\r\nDisplayReplacementIcon.defaultProps = {\r\n    name: 'Display Replacement Icon',\r\n    componentName: 'DisplayReplacementIcon',\r\n    description: 'Display Replacement icon for SLA printers',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst DownloadIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M266.67 433.34L366.66 433.34 366.66 300.01 433.34 299.99 433.34 433.32 533.33 433.34 400 566.66z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M400 99.99c-133.53,0 -242.23,104.71 -249.3,236.4 -85.67,15.43 -150.7,90.2 -150.7,180.27 0,101.23 82.1,183.33 183.33,183.33l433.34 0.02c101.23,0 183.33,-82.1 183.33,-183.33 0,-90.07 -65.03,-164.84 -150.7,-180.27 -7.07,-131.7 -115.76,-236.4 -249.3,-236.4l0 -0.02zm0 66.67c115.1,0 196.37,93.23 185.56,226 58.16,-1.54 147.76,25.03 147.76,124.01 0,64.32 -52.33,116.66 -116.66,116.66l-433.34 0c-64.33,0 -116.66,-52.34 -116.66,-116.66 0,-93.23 82.63,-127.76 147.76,-124.01 -5.57,-140.6 73.6,-226 185.56,-226z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default DownloadIcon\r\n\r\nDownloadIcon.defaultProps = {\r\n    name: 'Download icon',\r\n    componentName: 'DownloadIcon',\r\n    description: 'Icon for downloading files from internet.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst EditIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M483.19 211.05L543.46 150.6 421.49 28.64 361.24 89.08z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M330.83 119.3l-270.9 270.9 -30.76 152.72 152.72 -30.76 270.9 -270.9 -121.96 -121.96 0 0zm0 60.62l61.34 61.34 -231.51 231.51 -76.81 15.47 15.47 -76.81 231.51 -231.51 0 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default EditIcon\r\n\r\nEditIcon.defaultProps = {\r\n    name: 'Edit Icon',\r\n    componentName: 'EditIcon',\r\n    description: 'Icon for edit action.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst ErrorIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M153.84 225.99c-7.95,0 -14.42,-6.46 -14.42,-14.42 0,-7.96 6.46,-14.42 14.42,-14.42 7.95,0 14.42,6.46 14.42,14.42 0,7.95 -6.46,14.42 -14.42,14.42zm-17.3 -141.35l34.6 0 -11.54 92.28 -11.53 0 -11.54 -92.28z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M211.2 15.38l-114.7 0 -81.11 81.11 0 114.7 81.11 81.11 114.7 0 81.11 -81.11 0 -114.7 -81.11 -81.11 0 0zm-9.56 23.07l67.61 67.6 0 95.59 -67.61 67.61 -95.64 0 -67.61 -67.61 0 -95.59 67.61 -67.6 95.64 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ErrorIcon\r\n\r\nErrorIcon.defaultProps = {\r\n    name: 'Error Icon',\r\n    componentName: 'ErrorIcon',\r\n    description: 'Icon for error event.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst EstimatedEndIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M177.06 29.1c-7.98,0 -15.96,2.26 -22.89,6.76 26.69,10.26 47.94,31.48 58.22,58.17 4.5,-6.93 6.74,-14.9 6.74,-22.88 0,-23.25 -18.83,-42.06 -42.07,-42.06l0 0zm-69.75 111l-19.58 -18.38 -11.75 12.08 31.54 30.02 55.23 -55.5 -11.97 -11.85 -43.47 43.64zm-83.51 -46.04c-4.51,-6.94 -6.75,-14.92 -6.75,-22.88 0,-23.22 18.8,-42.06 42.02,-42.06 7.98,0 15.97,2.26 22.91,6.76 -26.71,10.25 -47.93,31.48 -58.18,58.18l0 -0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M202.3 130.15c0,-46.5 -37.68,-84.21 -84.22,-84.21 -46.5,0 -84.21,37.71 -84.21,84.21 0,36.34 25.99,84.2 84.21,84.2 58.35,0 84.22,-47.94 84.22,-84.2zm-84.22 67.36c-37.14,0 -67.37,-30.23 -67.37,-67.36 0,-37.16 30.23,-67.37 67.37,-67.37 37.15,0 67.38,30.21 67.38,67.37 0,37.13 -30.23,67.36 -67.38,67.36z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default EstimatedEndIcon\r\n\r\nEstimatedEndIcon.defaultProps = {\r\n    name: 'Estimated End Icon',\r\n    componentName: 'EstimatedEndIcon',\r\n    description: 'Icon for estimated end of print.',\r\n    tags: [Tag.ICONS, Tag.SL1, Tag.CONNECT],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst ExportIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M191.18 110.29L191.18 80.88 235.29 117.65 191.18 154.41 191.18 125 117.65 125 117.65 110.29z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M176.47 44.12L176.47 95.59 161.76 95.59 161.76 58.82 73.53 58.82 73.53 176.47 161.76 176.47 161.76 139.71 176.47 139.71 176.47 191.18 58.82 191.17 58.82 44.12z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ExportIcon\r\n\r\nExportIcon.defaultProps = {\r\n    name: 'Export Icon',\r\n    componentName: 'ExportIcon',\r\n    description: 'Universal export icon',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst ExposureTimesIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M274.15 77.37l18.11 -18.11 18.19 18.2 -17.02 17.02c-5.98,-6.24 -12.38,-11.97 -19.29,-17.1l0 0zm-92.41 -5.31c-71.1,0 -128.81,57.63 -128.81,128.81 0,71.1 57.71,128.81 128.81,128.81 71.1,0 128.81,-57.62 128.81,-128.81 0,-71.1 -57.71,-128.81 -128.81,-128.81zm0 231.85c-56.78,0 -103.03,-46.25 -103.03,-103.03 0,-56.78 46.25,-103.03 103.03,-103.03 56.78,0 103.03,46.25 103.03,103.03 0,56.78 -46.25,103.03 -103.03,103.03zm-25.78 -255.26l0 -28.05 51.56 0 0 28.05c-18.54,-3.11 -33.36,-3.03 -51.48,0l0 0 -0.08 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M194.63 179.4l-8.84 -51.48 -7.84 0 -9.01 51.48c-7.67,4.46 -12.89,12.64 -12.89,22.16 0,14.24 11.54,25.78 25.78,25.78 14.24,0 25.78,-11.54 25.78,-25.78 0,-9.52 -5.22,-17.69 -12.89,-22.16l-0.08 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ExposureTimesIcon\r\n\r\nExposureTimesIcon.defaultProps = {\r\n    name: 'Exposure Times Icon',\r\n    componentName: 'ExposureTimesIcon',\r\n    description: 'Icon for exposure times settings for SLA printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst FactoryResetTimesIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M159.98 213.22l-26.65 0c5.29,-58.19 47.6,-106.66 93.33,-106.66 6.56,0 12.76,1.56 18.2,4.39 8.41,-18.31 26.97,-31.03 48.44,-31.03 21.5,0 40.03,12.73 48.44,31.03 5.48,-2.8 11.64,-4.39 18.2,-4.39 22.08,0 39.99,17.91 39.99,39.99 0,22.08 -17.91,39.99 -39.99,39.99 -6.56,0 -12.76,-1.56 -18.2,-4.39 -8.41,18.31 -26.97,31.04 -48.44,31.04 -62.54,0 -99.27,-78.68 -133.35,0l0 0 0.04 0.03z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M720 719.87l-640 0 0 -480 160 0 0 160 160 -106.67 0 106.89 160 -106.89 0 107.14 160 -107.14 0 426.67zm-133.31 -106.67l-53.34 0 0 -80.02 53.34 0 0 80.02zm-106.67 0l-53.33 0 0 -80.02 53.33 0 0 80.02zm-106.66 0l-53.33 0 0 -80.02 53.33 0 0 80.02zm-106.67 0l-53.33 0 0 -80.02 53.33 0 0 80.02zm-80.02 -320l-53.34 0 0 373.33 533.34 0 0 -266.66 -160 106.66 0 -106.66 -160 106.66 0 -106.66 -160 106.66 0 -213.33 0 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FactoryResetTimesIcon\r\n\r\nFactoryResetTimesIcon.defaultProps = {\r\n    name: 'Factory Reset Icon',\r\n    componentName: 'FactoryResetIcon',\r\n    description: 'Icon for reseting printer to factory defaults.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst FanIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M1999.84 2434.38c239.96,0 434.4,-194.46 434.4,-434.42 0,-239.94 -194.44,-434.4 -434.4,-434.4 -239.96,0 -434.4,194.46 -434.4,434.4 0,239.96 194.44,434.42 434.4,434.42zm-501.44 -1922.46c19.84,118.36 160.46,133.46 321.9,403.08 49.28,82.3 216.34,419.88 145.56,525.8 -36.26,-56.26 -76.64,-139.7 -117.62,-203.9 -118.36,-185.38 -339.06,-403.26 -555.82,-492.54 -272.04,-111.96 -466.3,145.56 -607.9,344.18 -14.32,20.18 -57.2,86.64 -68.34,109.88 -87.96,182.2 121.94,124.98 277.72,132.34 223.34,10.74 627.34,143.1 699.82,297.9 -301.48,-57.76 -1193.72,-301.86 -1193.72,366.26 0,134.22 24.92,407.4 100.82,498.98 184.64,10.94 246,-422.16 946.6,-486.16 -60.22,83.26 -487.46,231.84 -694.36,676.06 -43.04,92.32 -51.36,175.58 -15.68,274.12 33.8,93.1 105.54,132.54 159.72,189.56 104.02,109.5 438.18,441.96 435.16,114.24 -1.7,-170.1 -7.54,-274.12 48.52,-451.98 43.22,-137.24 161.42,-364.94 244.5,-410.98 -3.6,152.16 -196.54,540.52 -13.22,993.04 64,158 176.14,209.36 393.64,207.08 153.3,-1.7 421.18,-14.18 493.32,-120.82 -38.34,-144.6 -296.4,-204.46 -437.08,-644.16l-48.88 -212.56c-1.7,-106.3 -5.66,-43.62 17.76,-76.28 141,282.26 340,562.58 646.8,697.78 232.6,102.52 358.32,-18.88 464.8,-133.28 67.98,-73.04 294.9,-299.4 248.44,-427.62 -101.18,-40.76 -408.16,-8.5 -588.44,-65.68 -128.76,-40.96 -357.4,-155.58 -407.06,-252.6 360.98,76.1 604.14,181.82 1001.36,20 266.18,-108.38 217.3,-531.08 151.02,-772.34l-44.38 -92.7c-63.42,-90.42 -219.94,168.22 -412.86,295.82 -72.52,47.96 -157.08,88.54 -250.72,120.26 -76.62,25.84 -219.76,70.42 -285.82,38.52 52.46,-46.08 222.96,-116.28 404.76,-269.04 73.06,-61.38 225.78,-259.96 285.66,-389.86 185.58,-401.94 -470.28,-732.7 -568.46,-719.48 -46.26,187.86 52.1,677.16 -295.08,998.88 -10.76,-135.54 352.26,-1204.1 -396.46,-1192.6 -151.98,2.26 -406.46,16.06 -485.56,110.8l-0.42 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M2319.82 1999.96c0,-176.72 -143.26,-319.98 -319.98,-319.98 -176.72,0 -319.98,143.26 -319.98,319.98 0,176.74 143.26,319.98 319.98,319.98 176.72,0 319.98,-143.24 319.98,-319.98z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FanIcon\r\n\r\nFanIcon.defaultProps = {\r\n    name: 'Fan Icon',\r\n    componentName: 'FanIcon',\r\n    description: 'Icon for fan settings.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst FastBackwardIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M263.06 276.67L292.08 247.64 196.29 153.56 292.08 59.54 263.06 30.51 138.24 153.56z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M139.98 276.67L169 247.64 73.21 153.56 169 59.54 139.98 30.51 15.16 153.56z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FastBackwardIcon\r\n\r\nFastBackwardIcon.defaultProps = {\r\n    name: 'Fast Backward Icon',\r\n    componentName: 'FastBackwardIcon',\r\n    description: 'Icon for fast backward movements.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst FastDownIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M513.81 82.89L459.91 28.99 285.18 206.89 110.57 28.99 56.66 82.89 285.18 314.69z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M513.81 311.46L459.91 257.56 285.18 435.47 110.57 257.56 56.66 311.46 285.18 543.27z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FastDownIcon\r\n\r\nFastDownIcon.defaultProps = {\r\n    name: 'Fast Down Icon',\r\n    componentName: 'FastDownIcon',\r\n    description: 'Icon for fast down movements.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst FastForwardIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M82.89 513.81L28.99 459.91 206.89 285.18 28.99 110.57 82.89 56.66 314.69 285.18z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M311.46 513.81L257.56 459.91 435.47 285.18 257.56 110.57 311.46 56.66 543.27 285.18z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FastForwardIcon\r\n\r\nFastForwardIcon.defaultProps = {\r\n    name: 'Fast Forward Icon',\r\n    componentName: 'FastForwardIcon',\r\n    description: 'Icon for fast forward movements.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst FastUpIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M3596.7 3419.8L3219.36 3797.1 1996.28 2551.78 773.96 3797.1 396.62 3419.8 1996.28 1797.14z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M3596.7 1819.76L3219.36 2197.06 1996.28 951.74 773.96 2197.06 396.62 1819.76 1996.28 197.1z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FastUpIcon\r\n\r\nFastUpIcon.defaultProps = {\r\n    name: 'Fast Up Icon',\r\n    componentName: 'FastUpIcon',\r\n    description: 'Icon for fast up movements.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst FirmwareIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M454.66 196.28l59.62 0 0 19.88 -59.62 0 0 -19.88zm-237.32 97.56l32.99 0 0 -11.45 -32.99 0 0 -25.56 35.32 0 0 -11.67 -50.17 0 0 81.14 14.85 0 0 -32.46zm81.03 32.46l13.9 -51.12c2.23,-8.06 2.65,-12.73 2.65,-12.73l0.21 0c0,0 0.42,4.67 2.65,12.83l14.11 51.02 14.96 0 22.06 -81.14 -13.79 0 -12.73 50.27c-2.02,8.06 -2.55,13.26 -2.55,13.26l-0.21 0c0,0 -0.85,-5.2 -3.07,-13.37l-13.79 -50.17 -14.32 0 -13.68 50.27c-2.23,8.06 -2.76,13.26 -2.76,13.26l-0.21 0c0,0 -0.43,-5.2 -2.55,-13.37l-12.94 -50.17 -15.17 0 22.06 81.14 15.17 0zm76.78 128.36l0 59.63 -19.87 -0.01 0 -59.63 19.87 0.01zm-159 0l0 59.63 -19.88 -0.01 0 -59.63 19.88 0.01zm79.5 0l0 59.63 -19.87 -0.01 0 -59.63 19.87 0.01zm39.76 0l0 59.63 -19.88 -0.01 0 -59.63 19.88 0.01zm-79.51 0l0 59.63 -19.88 -0.01 0 -59.63 19.88 0.01zm-198.75 -258.38l59.62 0 0 19.88 -59.62 0 0 -19.88zm0 159l59.62 0 0 19.88 -59.62 -0.01 0 -19.88 0 0.01zm0 -79.5l59.62 0 0 19.87 -59.62 0 0 -19.87zm0 -39.75l59.62 0 0 19.88 -59.62 0 0 -19.88zm0 79.51l59.62 0 0 19.88 -59.62 0 0 -19.88zm318.01 -258.38l0 59.63 -19.87 -0.01 0 -59.63 19.87 0.01zm-159 0l0 59.63 -19.88 -0.01 0 -59.63 19.88 0.01zm79.5 0l0 59.63 -19.87 -0.01 0 -59.63 19.87 0.01zm39.76 0l0 59.63 -19.88 -0.01 0 -59.63 19.88 0.01zm-79.51 0l0 59.63 -19.88 -0.01 0 -59.63 19.88 0.01zm198.77 298.13l59.62 0 0 19.88 -59.62 -0.01 0 -19.88 0 0.01zm0 -79.5l59.62 0 0 19.87 -59.62 0 0 -19.87zm0 -39.75l59.62 0 0 19.88 -59.62 0 0 -19.88zm0 79.51l59.62 0 0 19.88 -59.62 0 0 -19.88z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M434.79 176.4c0,-21.94 -17.81,-39.75 -39.75,-39.75l-218.63 0c-21.94,0 -39.75,17.81 -39.75,39.75l0 218.63c0,21.94 17.81,39.75 39.75,39.75l218.63 0c21.94,0 39.75,-17.81 39.75,-39.75l0 -218.63zm-54.66 0c8.23,0 14.91,6.68 14.91,14.91l0 188.81c0,8.23 -6.68,14.9 -14.91,14.9l-188.82 0.01c-8.23,0 -14.91,-6.68 -14.91,-14.91l0 -188.81c0,-8.23 6.68,-14.9 14.91,-14.9l188.82 -0.01z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FirmwareIcon\r\n\r\nFirmwareIcon.defaultProps = {\r\n    name: 'Firmware icon',\r\n    componentName: 'FirmwareIcon',\r\n    description: 'Firmware icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst FolderIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M101.01 53.37c-14.96,0 -21.17,-9.71 -36.73,-27.55l-64.28 0 0 183.65 220.38 -0 0 -156.1 -119.37 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FolderIcon\r\n\r\nFolderIcon.defaultProps = {\r\n    name: 'Folder icon',\r\n    componentName: 'FolderIcon',\r\n    description: 'Universal Folder icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst FolderOpenedIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M156.08 87.05c-23.07,0 -32.74,-15 -56.79,-42.6l-99.29 0 0 255.21 29.64 -155.56 310.94 0 0 -57.06 -184.49 0 -0.01 0zm207.56 71.52l-322.12 0 -30.61 160.61 322.12 0 30.61 -160.61z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FolderOpenedIcon\r\n\r\nFolderOpenedIcon.defaultProps = {\r\n    name: 'Folder opened icon',\r\n    componentName: 'FolderOpenedIcon',\r\n    description: 'Universal opened Folder icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.06\r\n\r\nconst FolderSimpleIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M202.79 133.34c46,53.74 85.94,100.01 163.92,100.01l366.68 0 0 433.37 -666.71 0 0 -533.37 136.11 -0.01zm30.57 -66.67l-233.35 0 0 666.72 800.06 -0.01 0 -566.71 -433.37 0c-54.3,0 -76.84,-35.26 -133.34,-100.01l0 0.01z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FolderSimpleIcon\r\n\r\nFolderSimpleIcon.defaultProps = {\r\n    name: 'Folder simple icon',\r\n    componentName: 'FolderSimpleIcon',\r\n    description: 'Universal simple Folder icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst FrequencyIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M162.92 137.08l-18.1 0 0 36.04 18.1 0 0 -36.04zm-144.78 0l-0.05 0 -18.03 0 -0.05 0 0 36.04 0.05 0 18.03 0 0.05 0 0 -36.04zm162.87 -36.35l18.1 0 0 72.39 -18.1 0 0 -72.39zm-54.29 0l-18.1 0 0 72.39 18.1 0 0 -72.39zm-72.38 0l-18.1 0 0 72.39 18.1 0 0 -72.39z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M217.19 62.17l18.1 0 0 110.94 -18.1 0 0 -110.94zm-126.66 0l-18.1 0 0 110.94 18.1 0 0 -110.94z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default FrequencyIcon\r\n\r\nFrequencyIcon.defaultProps = {\r\n    name: 'Frequency Icon',\r\n    componentName: 'FrequencyIcon',\r\n    description: 'Icon for frequency settings for SLA printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.35\r\n\r\nconst HeatedBedIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M176.83 392.22c-44.78,-44.22 -50.44,-70.29 -11.33,-120.73 13.6,-17.57 19.84,-35.14 19.84,-52.16 0,-35.7 -26.07,-70.85 -60.07,-111.67l-53.85 51.02c51.02,59.51 46.47,65.76 9.63,117.89 -11.9,17.01 -16.43,33.45 -16.43,50.44 0,43.08 32.31,83.89 61.79,114.5l51.02 -49.32 0 0 -0.59 0.02zm322.53 0c-44.78,-44.22 -50.44,-70.29 -11.33,-120.73 13.6,-17.57 19.84,-35.14 19.84,-52.16 0,-35.7 -26.07,-70.85 -60.08,-111.67l-53.85 51.02c51.02,59.51 46.47,65.76 9.63,117.89 -11.91,17.01 -16.43,33.45 -16.43,50.44 0,43.08 32.31,83.89 61.79,114.5l51.02 -49.32 0 0 -0.59 0.02zm-163.25 0c-44.78,-44.22 -50.44,-70.29 -11.33,-120.73 13.6,-17.57 19.85,-35.14 19.85,-52.16 0,-35.7 -26.07,-70.85 -60.08,-111.67l-53.85 51.02c51.02,59.51 46.47,65.76 9.64,117.89 -11.91,17.01 -16.44,33.45 -16.44,50.44 0,43.08 32.31,83.89 61.79,114.5l51.02 -49.32 0 0 -0.59 0.02z\" />\r\n                <path fill={primaryColor?.toString()} fillRule=\"nonzero\" d=\"M0 492.55L571.35 492.55 571.35 571.35 0 571.35z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default HeatedBedIcon\r\n\r\nHeatedBedIcon.defaultProps = {\r\n    name: 'Heated Bed icon',\r\n    componentName: 'HeatedBedIcon',\r\n    description: 'Heated Bed icon for FDM printers.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3997.6\r\n\r\nconst HomeIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M3997.62 2165.11l-1998.79 -1998.81 -1998.81 1998.81 499.48 0 0 1666.19 1165.77 0 0 -833.08 666.28 0 0 833.08 1165.77 0 0 -1666.19 499.48 0 0.82 0zm-833.08 1332.59l-499.48 0 0 -833.1 -1332.59 0 0 833.1 -499.48 0 0 -1708.82 1165.79 -1151.55 1165.77 1164.83 0 1696.49 0 -0.94z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M3331.34 1181.4L3331.34 333.12 2830.92 333.12 2830.92 681.91z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default HomeIcon\r\n\r\nHomeIcon.defaultProps = {\r\n    name: 'Home icon',\r\n    componentName: 'HomeIcon',\r\n    description: 'Universal Home icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst HomePlatformIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M101.61 729.63L171.94 800 400.1 567.78 628.07 800 698.4 729.63 400.1 427z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M101.62 222.98L307.38 222.98 307.38 0 492.62 0 492.62 222.98 698.39 222.98 698.39 322.46 101.62 322.46z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default HomePlatformIcon\r\n\r\nHomePlatformIcon.defaultProps = {\r\n    name: 'Home Platform Icon',\r\n    componentName: 'HomePlatformIcon',\r\n    description: 'Icon for homing print platform for SLA printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4021.66\r\n\r\nconst HomeResinTankIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M0.02 4021.66L4000.04 4021.66 4000.04 2688.67 3333.56 2688.67 3333.56 3355.18 666.5 3355.18 666.5 2688.67 0.02 2688.67z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M507.54 591.88L859.2 240.02 2000.03 1401.15 3139.86 240.02 3491.52 591.88 2000.03 2105.01z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default HomeResinTankIcon\r\n\r\nHomeResinTankIcon.defaultProps = {\r\n    name: 'Home Resin Tank Icon',\r\n    componentName: 'HomeResinTankIcon',\r\n    description: 'Icon for homing resin tank for SLA printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.06\r\n\r\nconst HomeSimpleIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M400.37 9.92l-400.37 372.31 0 407.91 800.06 0 0 -407.91 -400.37 -372.31 0 0 0 0 0.68 0zm0 121.82l311.39 289.49 0 279.92 -622.11 0 0 -279.92 311.39 -289.49 0 0 -0.68 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default HomeSimpleIcon\r\n\r\nHomeSimpleIcon.defaultProps = {\r\n    name: 'Home simple icon',\r\n    componentName: 'HomeSimpleIcon',\r\n    description: 'Universal simple Home icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1, Tag.OUTLINE],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst HostnameIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M321.66 571.43l-16.75 -71.47 -38.46 0 -16.75 71.47 71.97 0zm-71.3 -142.85l21.62 47.59 27.73 0 21.87 -47.59 -71.22 0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M571.27 571.43l-47.51 0c0,-73.9 2.85,-84.54 -41.89,-94.93 -68.54,-15.83 -133.22,-30.75 -156.77,-82.36 -8.63,-18.85 -14.33,-49.85 7.37,-90.82 48.6,-91.83 60.83,-170.59 33.43,-216.09 -31.92,-53.04 -128.86,-53.37 -161.13,0.84 -27.48,46.08 -15.08,124.43 33.93,214.91 22.12,40.81 16.59,71.89 8.05,90.83 -23.38,51.87 -87.48,66.61 -155.34,82.28 -46.75,10.81 -43.82,20.69 -43.82,95.35l-47.51 0 -0.09 -29.58c0,-59.99 4.77,-94.68 75.66,-111.02 80.1,-18.52 159.2,-35.02 121.16,-105.15 -112.69,-207.79 -32.17,-325.68 88.9,-325.68 118.64,0 201.25,113.45 88.9,325.68 -36.95,69.71 39.29,86.31 121.16,105.15 70.97,16.34 75.66,51.03 75.66,111.02l-0.09 29.58 0 0 -0.08 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default HostnameIcon\r\n\r\nHostnameIcon.defaultProps = {\r\n    name: 'Hostname Icon',\r\n    componentName: 'HostnameIcon',\r\n    description: 'Network identification name.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst HotspotIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M2000 1647.5c195.02,0 352.5,157.42 352.5,352.5 0,195.02 -157.42,352.5 -352.5,352.5 -195.02,0 -352.5,-157.42 -352.5,-352.5 0,-195.02 157.42,-352.5 352.5,-352.5z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M2011.78 1276.22c397.12,0 721.4,324.28 721.4,721.4 0,197.4 -79.9,378.3 -211.48,509.9l256.1 256.12c197.4,-197.4 317.22,-467.62 317.22,-766.02 0,-596.9 -484.1,-1080.92 -1080.92,-1080.92 -596.88,0 -1080.92,484.1 -1080.92,1080.92 0,298.4 119.82,568.68 317.22,766.02l256.1 -256.12c-131.58,-131.6 -211.48,-310.2 -211.48,-509.9 0,-397.12 324.28,-721.4 721.4,-721.4l-4.7 0 0.06 0zm0 -721.4c794.22,0 1440.5,646.2 1440.5,1440.48 0,397.1 -162.12,756.62 -423,1019.8l256.12 256.12c324.28,-324.3 528.7,-775.42 528.7,-1273.6 0,-994 -806,-1800 -1800,-1800 -994,0 -1800,806 -1800,1800 0,498.18 202.1,947 528.7,1273.6l256.12 -256.12c-260.82,-260.8 -423,-622.7 -423,-1019.8 0,-794.22 646.2,-1440.48 1440.5,-1440.48l-4.64 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default HotspotIcon\r\n\r\nHotspotIcon.defaultProps = {\r\n    name: 'Hotspot Icon',\r\n    componentName: 'HotspotIcon',\r\n    description: 'Setting up an access point in the printer.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst ImportIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M117.27 144.24L117.27 105.78 174.97 153.85 117.27 201.93 117.27 163.47 21.12 163.47 21.12 144.24z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M76.92 57.69L76.92 125.01 96.15 125 96.15 76.92 211.54 76.92 211.54 230.77 96.15 230.77 96.15 182.7 76.92 182.7 76.92 250 230.77 250 230.77 57.69z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ImportIcon\r\n\r\nImportIcon.defaultProps = {\r\n    name: 'Import Icon',\r\n    componentName: 'ImportIcon',\r\n    description: 'Universal import icon',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.3\r\n\r\nconst InfoIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M117.65 0c-64.97,0 -117.65,52.68 -117.65,117.65 0,64.97 52.68,117.65 117.65,117.65 64.97,0 117.65,-52.68 117.65,-117.65 0,-64.97 -52.68,-117.65 -117.65,-117.65zm0 19.61c54.04,0 98.03,43.99 98.03,98.03 0,54.04 -43.99,98.03 -98.03,98.03 -54.04,0 -98.03,-43.99 -98.03,-98.03 0,-54.04 43.99,-98.03 98.03,-98.03z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M91.94 94.33l0 19.61 19.58 0 0 58.8 19.61 0 0 -78.4 -39.19 0zm41.64 -29.38c0,6.76 -5.49,12.26 -12.26,12.26 -6.76,0 -12.26,-5.49 -12.26,-12.26 0,-6.76 5.49,-12.26 12.26,-12.26 6.76,0 12.26,5.49 12.26,12.26z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default InfoIcon\r\n\r\nInfoIcon.defaultProps = {\r\n    name: 'Info icon',\r\n    componentName: 'InfoIcon',\r\n    description: 'Universal Info icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst LanIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M227.18 272.69l-90.96 0 0 90.96 90.96 0 0 -90.96zm-136.22 0l-90.96 0 0 90.96 90.96 0 0 -90.96zm-30.4 30.4l0 30.4 -30.4 0 0 -30.4 30.4 0zm303.09 -30.4l-90.96 0 0 90.96 90.96 0 0 -90.96zm-30.4 30.4l0 30.4 -30.4 0 0 -30.4 30.4 0zm-136.22 -136.46l0 -45.51 -30.4 0 0 45.51 -136.22 0 0 75.67 30.16 0 0 -45.27 106.07 0 0 45.27 30.4 0 0 -45.27 106.07 0 0 45.27 30.16 0 0 -75.67 -136.22 0zm-0.23 136.46l0 30.4 -30.4 0 0 -30.4 30.4 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M242.29 0l-121.17 0 0 90.96 121.17 0 0 -90.96zm-30.4 30.4l0 30.4 -60.56 0 0 -30.4 60.56 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default LanIcon\r\n\r\nLanIcon.defaultProps = {\r\n    name: 'LAN icon',\r\n    componentName: 'LanIcon',\r\n    description: 'Universal LAN icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst LanguageIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M153.85 26.93c-73.15,0 -138.46,48.74 -138.46,115.43 0,23.66 8.52,46.86 23.6,64.92 0.63,21.09 -11.83,51.43 -22.97,73.49 30,-5.43 72.69,-17.37 92.06,-29.26 16.34,4 32,5.83 46.8,5.83 81.72,0 137.44,-55.83 137.44,-114.92 0,-67.03 -65.77,-115.44 -138.46,-115.44l0 0 0 -0.05zm0 23.09c63.6,0 115.38,41.43 115.38,92.4 0,56.75 -59.37,91.83 -114.35,91.83 -22.34,0 -39.03,-4.57 -50.69,-7.43 -11.54,7.08 -18.4,11.94 -49.26,20.97 6.17,-15.83 8.34,-31.72 6.92,-49.2 -9.66,-11.54 -23.37,-27.72 -23.37,-56.23 0,-50.92 51.78,-92.4 115.38,-92.4l0 0 -0 0.06z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M218.08 131.5c0.74,-2.8 1.14,-4.91 1.54,-6.97l-12.69 -2.46 -1.26 5.77c-4.29,-0.63 -8.86,-0.69 -13.43,-0.23 0.11,-3.08 0.28,-6.12 0.57,-9.03l14.17 0 0 -12 -12.46 0c0.63,-3.03 1.14,-4.91 1.66,-6.63l-12.4 -3.71c-0.91,3.03 -1.66,6 -2.46,10.34l-14.17 0 0 12 12.57 0c-0.34,3.89 -0.51,7.89 -0.57,12 -13.94,5.09 -19.83,14.86 -19.83,23.72 0,10.46 8.23,19.6 21.26,18.46 16.17,-1.48 26.97,-13.66 33.26,-28.69 6.51,3.77 9.31,10.12 6.8,16 -2.28,5.43 -8.97,10.63 -21.83,10.34l0 12.92c14.23,0.23 28.23,-5.2 33.77,-18.29 5.37,-12.8 -0.74,-26.74 -14.57,-33.43l0.06 -0.11zm-110.86 -29.6l15.03 0 28.52 74.98 -15.54 0 -6.23 -17.32 -28.11 0 -6.17 17.32 -16.06 0 28.57 -74.98zm17.49 45.71l-9.88 -28.29 -9.83 28.29 19.71 0zm54.86 -3.08c0.34,5.43 0.97,10.51 1.83,14.97 -11.48,2.12 -11.94,-9.26 -1.83,-14.97zm21.83 -4.17c-2,4.46 -4.69,8.92 -8.06,12.4 -0.52,-3.71 -0.86,-7.83 -1.09,-12.17 3.09,-0.4 6.17,-0.46 9.09,-0.23l0 0 0.05 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default LanguageIcon\r\n\r\nLanguageIcon.defaultProps = {\r\n    name: 'Language icon',\r\n    componentName: 'FirmwareIcon',\r\n    description: 'Icon for language settings for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.3\r\n\r\nconst LedSetReplacementIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M-0 57.81l235.3 0 0 -18.83 -235.3 0 0 18.83zm74.52 99.77c1.01,2.96 -0.58,6.18 -3.55,7.18 -2.96,1.01 -6.18,-0.58 -7.18,-3.55l-28.56 -83.51c-1,-2.96 0.58,-6.18 3.55,-7.18 2.96,-1.01 6.18,0.58 7.18,3.55l28.56 83.51zm97 3.64c-1.01,2.96 -4.22,4.55 -7.18,3.55 -2.96,-1 -4.55,-4.22 -3.55,-7.18l28.56 -83.51c1.01,-2.96 4.22,-4.55 7.18,-3.55 2.96,1 4.55,4.22 3.55,7.18l-28.56 83.51zm-23.11 -86.13c0.44,-3.1 3.31,-5.25 6.41,-4.81 3.1,0.44 5.25,3.31 4.81,6.41l-12.15 83.51c-0.44,3.1 -3.31,5.25 -6.41,4.81 -3.1,-0.44 -5.25,-3.31 -4.81,-6.41l12.15 -83.51zm-25.08 84.31c0,3.13 -2.54,5.67 -5.67,5.67 -3.13,0 -5.67,-2.54 -5.67,-5.67l0 -83.51c0,-3.13 2.54,-5.67 5.67,-5.67 3.13,0 5.67,2.54 5.67,5.67l0 83.51zm-24.28 -0.8c0.44,3.1 -1.72,5.97 -4.81,6.41 -3.1,0.44 -5.97,-1.72 -6.41,-4.81l-12.15 -83.51c-0.44,-3.1 1.72,-5.97 4.81,-6.41 3.1,-0.44 5.97,1.72 6.41,4.81l12.15 83.51z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M62.87 174.18H172.42V193.01H62.87z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default LedSetReplacementIcon\r\n\r\nLedSetReplacementIcon.defaultProps = {\r\n    name: 'Led Set Replacement Icon',\r\n    componentName: 'LedSetReplacementIcon',\r\n    description: 'Led set replacement icon for SLA printers',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoInverseColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.36\r\n\r\nconst LiveAdjustZArrowDownIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoInverseColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M285.71 499.94L571.36 71.42 0 71.42z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default LiveAdjustZArrowDownIcon\r\n\r\nLiveAdjustZArrowDownIcon.defaultProps = {\r\n    name: 'Live Adjust Z Arrow Down',\r\n    componentName: 'LiveAdjustZArrowDown',\r\n    description: 'Small arrow for adjusting nozzle at Z axis.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoInverseColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3997.6\r\n\r\nconst LiveAdjustZArrowUpIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoInverseColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M1999 499.7L3997.6 3497.9 0 3497.9z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default LiveAdjustZArrowUpIcon\r\n\r\nLiveAdjustZArrowUpIcon.defaultProps = {\r\n    name: 'Live Adjust Z Arrow Up',\r\n    componentName: 'LiveAdjustZArrowUp',\r\n    description: 'Small arrow for adjusting nozzle at Z axis.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst LockIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M263.67 154.56l0 -54.53c0,-45.19 -36.65,-81.85 -81.85,-81.85 -45.19,0 -81.85,36.65 -81.85,81.85l0 54.53 27.32 0 0 -54.53c0,-30.05 24.47,-54.53 54.53,-54.53 30.05,0 54.53,24.47 54.53,54.53l0 54.53 27.32 0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M59.11 154.56H304.54V345.46000000000004H59.11z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default LockIcon\r\n\r\nLockIcon.defaultProps = {\r\n    name: 'Lock Icon',\r\n    componentName: 'LockIcon',\r\n    description: 'Universal lock icon.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst LogsIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M257.57 90.91l-151.51 0 0 15.15 151.51 0 0 -15.15zm0 106.06l-151.51 0 0 -15.15 151.51 0 0 15.15zm0 -60.61l-151.51 0 0 15.15 151.51 0 0 -15.15z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M333.33 217.97l0 -217.97 -303.03 0 0 363.64 154.38 0c47.93,0 148.65,-109.44 148.65,-145.67zm-272.73 115.36l0 -303.03 242.43 0.01 0 174.89c0,62.22 -90.91,37.23 -90.91,37.23 0,0 23,90.91 -39.97,90.91l-111.55 -0.01z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default LogsIcon\r\n\r\nLogsIcon.defaultProps = {\r\n    name: 'Logs icon',\r\n    componentName: 'LogsIcon',\r\n    description: 'Icon event logs for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst ManualIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M318.16 345.45l-231.74 0c-22.58,0 -40.94,-18.36 -40.94,-40.94l0 -245.39c0,-22.58 18.36,-40.94 40.94,-40.94l109.05 0 0 27.29 -109.05 0 0 218.1 204.45 0 0 -218.1 -40.94 0 0 -27.29 68.11 0 0 327.14 0.13 0.13zm-27.29 -54.46l-197.75 0c-18.73,0 -18.73,27.29 0,27.29l197.75 0 0 -27.29 0 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M250.05 18.31L250.05 141.01 222.76 119.92 195.59 141.01 195.59 18.31z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ManualIcon\r\n\r\nManualIcon.defaultProps = {\r\n    name: 'Manual Icon',\r\n    componentName: 'ManualIcon',\r\n    description: 'Icon for instructions and guides.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst MessageIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M-0 38.51l0 230.67 307.69 0 0 -230.67 -307.69 0zm25.59 205.09l0 -151.44 128.19 103.84 128.19 -103.84 0 151.44 -256.39 0zm250.21 -179.5l-122.02 98.89 -122.01 -98.89 244.03 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default MessageIcon\r\n\r\nMessageIcon.defaultProps = {\r\n    name: 'Message icon',\r\n    componentName: 'MessageIcon',\r\n    description: 'Message icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst MinusSignIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M543.74 423.97L256.25 423.97 256.25 376.04 543.74 376.04z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M400.02 112.53c-158.78,0 -287.5,128.72 -287.5,287.5 0,158.78 128.72,287.5 287.5,287.5 158.78,0 287.5,-128.72 287.5,-287.5 0,-158.78 -128.72,-287.5 -287.5,-287.5zm0 47.89c132.08,0 239.56,107.48 239.56,239.56 0,132.08 -107.48,239.56 -239.56,239.56 -132.08,0 -239.56,-107.48 -239.56,-239.56 0,-132.07 107.48,-239.56 239.56,-239.56z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default MinusSignIcon\r\n\r\nMinusSignIcon.defaultProps = {\r\n    name: 'Minus Sign Icon',\r\n    componentName: 'MinusSignIcon',\r\n    description: 'Minus sign icon for decreasing numeric value.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst MoveIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M177.16 130.54L177.16 60.61 219.11 60.61 153.85 0 88.58 60.61 130.54 60.61 130.54 130.54 60.61 130.54 60.61 88.58 0 153.85 60.61 219.11 60.61 177.16 130.54 177.16 130.54 247.09 88.58 247.09 153.85 307.69 219.11 247.09 177.16 247.09 177.16 177.16 247.09 177.16 247.09 219.11 307.69 153.85 247.09 88.58 247.09 130.54z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default MoveIcon\r\n\r\nMoveIcon.defaultProps = {\r\n    name: 'Move icon',\r\n    componentName: 'MoveIcon',\r\n    description: 'Move icon for Drag&Drop operations.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst MoveTopIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M0 625.91L94.39 720.3 400.39 408.9 706 720.3 800 625.91 400.39 220.11z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M0 133.47L800 133.47 800 0 0 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default MoveTopIcon\r\n\r\nMoveTopIcon.defaultProps = {\r\n    name: 'Move Top Icon',\r\n    componentName: 'MoveTopIcon',\r\n    description: 'Icon for homimg at top position.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst NetworkIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M223.53 170.59l-70.59 0 0 52.94 70.59 0 0 -52.94zm-26.47 -44.12l38.23 0 0 -17.65 -108.82 0 0 -26.47 -17.65 0 0 26.47 -108.82 -0 0 17.65 38.23 0 0 26.47 17.65 0 0 -26.47 123.53 0 0 26.47 17.65 -0 0 -26.47zm-114.71 44.12l-70.59 0 0 52.94 70.59 0 0 -52.94zm-17.65 17.65l0 17.65 -35.29 -0 0 -17.65 35.29 0zm141.18 0l0 17.65 -35.29 -0 0 -17.65 35.29 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M152.94 11.76l-70.59 0 0 52.94 70.59 0 0 -52.94zm-17.64 17.65l0 17.65 -35.3 -0 0 -17.65 35.3 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default NetworkIcon\r\n\r\nNetworkIcon.defaultProps = {\r\n    name: 'Network icon',\r\n    componentName: 'NetworkIcon',\r\n    description: 'Icon for network settings for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst NextIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} fill-rule=\"nonzero\" d=\"M117.61 33.09c75.07,0 112.9,91.19 59.77,144.3 -53.13,53.13 -144.29,15.29 -144.29,-59.77 0,-46.69 37.86,-84.52 84.52,-84.52zm47.81 36.72c-42.49,-42.48 -115.45,-12.23 -115.45,47.81 0,60.06 72.96,90.29 115.45,47.81 26.41,-26.41 26.41,-69.23 0,-95.64l0 0.02z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M104.64 168.33L92.68 156.39 132.15 117.59 92.68 78.86 104.64 66.9 156.07 117.59z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default NextIcon\r\n\r\nNextIcon.defaultProps = {\r\n    name: 'Next Icon',\r\n    componentName: 'NextIcon',\r\n    description: 'Icon for forward navigation.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst NoWifiIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M535.7 1932.14c368.02,-392.28 878.94,-633.44 1442.06,-633.44 563.12,0 1072,241.36 1442.06,633.44l357.94 -380.12c-460.54,-488.7 -1096.02,-790.32 -1800,-790.32 -703.98,0 -1339.46,301.62 -1800,790.32l357.94 380.12zm872.96 927.26c144.76,-154.84 346.04,-249.4 567.26,-249.4 221.22,0 422.28,94.56 567.04,249.4l-567.04 603.24 -567.26 -603.24zm-261.5 -277.56c213.2,-225.34 506.8,-364.12 830.6,-364.12 323.8,0 617.4,138.78 830.6,364.12l349.92 -370.06c-301.62,-319.72 -717.94,-518.94 -1178.48,-518.94 -460.52,0 -876.84,197.18 -1178.46,518.94l349.92 370.06 0 0 -4.14 0 0.04 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M918.04 3355.12L3403.02 870.12 3124.92 592.02 639.94 3077z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default NoWifiIcon\r\n\r\nNoWifiIcon.defaultProps = {\r\n    name: 'No Wifi icon',\r\n    componentName: 'No WifiIcon',\r\n    description: 'Universal No Wifi connection icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst NokIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M363.64 305.89L237.74 181.58 361.92 56.04 305.89 0 181.45 126.03 55.55 1.72 0 57.26 126.03 182.19 1.72 308.09 57.26 363.64 182.07 237.62 307.6 361.92z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default NokIcon\r\n\r\nNokIcon.defaultProps = {\r\n    name: 'Not OK icon',\r\n    componentName: 'NokIcon',\r\n    description: 'Not OK icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.3\r\n\r\nconst NozzleIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M132.18 115.91c0,51.04 7.82,42.55 -80.26,42.55l0 8.97 146.02 0c8.15,0 14.76,6.61 14.76,14.79l0 38.32c0,8.15 -6.61,14.76 -14.79,14.76l-160.5 0c-19.03,-0.21 -19.02,-29.37 0,-29.58l145.98 0 0 -8.98 -146.02 0c-8.15,0 -14.76,-6.61 -14.76,-14.79l0 -38.3c0,-8.15 6.61,-14.76 14.79,-14.76l65.47 0 0 -12.97 29.32 0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M184.19 0L184.19 54.4 136.94 115.91 97.86 115.91 50.61 54.4 50.61 0 80.18 0 80.18 44.36 112.12 86.33 122.44 86.33 154.66 44.36 154.66 0z\" />\r\n            </Scale>\r\n        </Svg >\r\n    )\r\n}\r\n\r\nexport default NozzleIcon\r\n\r\nNozzleIcon.defaultProps = {\r\n    name: 'Nozzle icon',\r\n    componentName: 'NozzleIcon',\r\n    description: 'FDM or FFF nozzle with extruded filament.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.TRANSPARENT,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}\r\n\r\n","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.06\r\n\r\nconst NozzleSimpleIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M139.99 43.48c0.01,-14.73 11.96,-26.68 26.69,-26.68 14.73,0 26.68,11.95 26.68,26.68l-0.01 221.04 413.37 0 0 -221.04c0,-14.73 11.95,-26.68 26.68,-26.68 14.73,0 26.68,11.95 26.68,26.68l0 221.04 113.3 0c14.73,0.03 26.65,11.96 26.68,26.68l0.01 264.94c-0.03,14.71 -11.96,26.64 -26.69,26.67l-125.46 0.01 -161.77 189.46c-5.01,6.84 -12.97,10.9 -21.45,10.96l-129.17 0.01c-7.8,-0.09 -15.19,-3.54 -20.26,-9.47l-163.12 -190.96 -125.46 0c-14.72,-0.04 -26.65,-11.97 -26.67,-26.69l-0.02 -264.93c0.04,-14.72 11.97,-26.65 26.69,-26.68l113.3 -0 0 -221.04zm409.99 486.15l0 -211.59 -299.9 0 0 211.59 299.9 0zm53.36 -211.59l0 211.59 143.36 0 0 -211.59 -143.36 0zm-406.78 211.59l0 -211.59 -143.36 0 0 211.59 143.36 0zm25.5 53.36l125.47 146.91 104.86 -0 125.47 -146.91 -355.62 0.01 -0.17 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default NozzleSimpleIcon\r\n\r\nNozzleSimpleIcon.defaultProps = {\r\n    name: 'Nozzle simple icon',\r\n    componentName: 'NozzleSimpleIcon',\r\n    description: 'Nozzle icon for Live adjust Z caibration. ',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst OkIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M198.85 24.52L88.29 137.94 36.38 88.77 0 125.15 88.29 210.77 235.29 60.91z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default OkIcon\r\n\r\nOkIcon.defaultProps = {\r\n    name: 'OK icon',\r\n    componentName: 'OkIcon',\r\n    description: 'OK icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.ORANGE,\r\n    secondaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3997.6\r\n\r\nconst ParentFolderIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M3883.17 3230.3L2447.49 3230.3 2447.49 1794.6 3344.79 1794.6 1729.62 0 114.45 1794.6 1011.79 1794.6 1011.79 3997.6 3883.17 3997.6z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ParentFolderIcon\r\n\r\nParentFolderIcon.defaultProps = {\r\n    name: 'Parent folder icon',\r\n    componentName: 'ParentFolderIcon',\r\n    description: 'Universal Parent folder icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3998.88\r\n\r\nconst PauseIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M2665.63 1166.09l-499.45 0 0 1666.18 499.45 0 0 -1666.18zm-832.76 1666.18l-500.01 0 0 -1666.18 500.01 0 0 1666.18z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M1999.53 0c-1104.19,0 -1999.47,895.26 -1999.47,1999.47 0,1104.19 895.28,1999.47 1999.47,1999.47 1104.19,0 1999.47,-895.28 1999.47,-1999.47 0,-1104.21 -895.28,-1999.47 -1999.47,-1999.47zm0 333.35c918.42,0 1666.12,747.68 1666.12,1666.12 0,918.42 -747.7,1666.12 -1666.12,1666.12 -918.42,0 -1666.12,-747.7 -1666.12,-1666.12 0,-918.44 747.7,-1666.12 1666.12,-1666.12z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PauseIcon\r\n\r\nPauseIcon.defaultProps = {\r\n    name: 'Pause icon',\r\n    componentName: 'PauseIcon',\r\n    description: 'Universal pause icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst PlatformSesitivityIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M71.34 185.96L219.08 185.96 219.08 25.84 352.14 25.84 352.14 185.96 499.91 185.96 499.91 257.39 71.34 257.39z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M308.64 397.55L369.65 397.55 285.71 285.71 201.81 397.65 262.93 397.65 262.93 444.18 201.81 444.18 285.71 556.1 369.75 444.18 308.64 444.18z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PlatformSesitivityIcon\r\n\r\nPlatformSesitivityIcon.defaultProps = {\r\n    name: 'Platform Sesitivity icon',\r\n    componentName: 'PlatformSesitivityIcon',\r\n    description: 'Platform sesitivity icon for SLA printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.42\r\n\r\nconst PlatformTankIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M0 226.98L235.35 226.98 235.35 148.7 205.93 148.7 205.93 197.57 29.41 197.57 29.41 148.7 0 148.7z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M29.41 74.55L90.28 74.55 90.28 8.6 145.07 8.6 145.07 74.55 205.93 74.55 205.93 103.98 29.41 103.98z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PlatformTankIcon\r\n\r\nPlatformTankIcon.defaultProps = {\r\n    name: 'Platform and Tank icon',\r\n    componentName: 'PlatformTankIcon',\r\n    description: 'Platform and Tank icon for SLA printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst PlusSignIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M2717.66 2118.9L2118.9 2118.9 2118.9 2717.66 1880.02 2717.66 1880.02 2118.9 1281.26 2118.9 1281.26 1880.02 1880.02 1880.02 1880.02 1281.26 2118.9 1281.26 2118.9 1880.02 2717.66 1880.02z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M2000 562.5c-793.48,0 -1437.5,642.98 -1437.5,1437.5 0,793.48 642.98,1437.5 1437.5,1437.5 793.48,0 1437.5,-642.98 1437.5,-1437.5 0,-793.48 -642.98,-1437.5 -1437.5,-1437.5zm0 239.92c659.82,0 1197.54,537.76 1197.54,1197.54 0,659.82 -537.76,1197.54 -1197.54,1197.54 -659.82,0 -1197.54,-537.76 -1197.54,-1197.54 0,-659.82 537.76,-1197.54 1197.54,-1197.54z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PlusSignIcon\r\n\r\nPlusSignIcon.defaultProps = {\r\n    name: 'Plus Sign Icon',\r\n    componentName: 'PlusSignIcon',\r\n    description: 'Plus sign icon for increasing numeric value.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.05\r\n\r\nconst PreheatIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M302.7 611.01c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.17,-15.71 17.75,-31.43 17.75,-46.63 0,-31.94 -23.32,-63.37 -53.74,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.26,102.4l45.62 -44.1 -0.5 0zm288.43 0c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.16,-15.71 17.74,-31.43 17.74,-46.63 0,-31.94 -23.32,-63.37 -53.73,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.25,102.4l45.63 -44.1 -0.51 0zm-145.99 0c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.16,-15.71 17.74,-31.43 17.74,-46.63 0,-31.94 -23.32,-63.37 -53.74,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.25,102.4l45.63 -44.1 -0.51 0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M566.18 32l0 124.4 -108.1 140.72 -89.37 0 -108.08 -140.72 0 -124.4 67.62 0 0 101.45 73.08 96.03 23.55 0 73.67 -96.03 0 -101.45 67.64 0zm-421.64 665.59l510.97 0 0 70.46 -510.97 0 0 -70.46z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PreheatIcon\r\n\r\nPreheatIcon.defaultProps = {\r\n    name: 'Preheat icon',\r\n    componentName: 'PreheatIcon',\r\n    description: 'Preheating nozzle and heated bed.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.TRANSPARENT,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}\r\n\r\n","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst PreviousIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} fill-rule=\"nonzero\" d=\"M181.87 51.14c-116.01,0 -174.48,140.93 -92.37,223 82.11,82.11 223,23.64 223,-92.37 0,-72.16 -58.51,-130.63 -130.63,-130.63zm-73.88 56.74c65.66,-65.66 178.42,-18.9 178.42,73.89 0,92.82 -112.76,139.54 -178.42,73.88 -40.81,-40.81 -40.81,-106.99 0,-147.8l0 0.03z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M201.91 260.14L220.4 241.69 159.41 181.73 220.4 121.87 201.91 103.39 122.43 181.73z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PreviousIcon\r\n\r\nPreviousIcon.defaultProps = {\r\n    name: 'Previous Icon',\r\n    componentName: 'PreviousIcon',\r\n    description: 'Icon for backward navigation.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst PrintIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M153.84 0c-84.96,0 -153.84,68.89 -153.84,153.84 0,84.96 68.89,153.84 153.84,153.84 84.96,0 153.84,-68.89 153.84,-153.84 0,-84.96 -68.88,-153.84 -153.84,-153.84zm0 25.65c70.67,0 128.19,57.53 128.19,128.19 0,70.67 -57.53,128.19 -128.19,128.19 -70.67,0 -128.19,-57.53 -128.19,-128.19 0,-70.67 57.53,-128.19 128.19,-128.19z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M106.81 78.62L106.81 229.06 242.17 156z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PrintIcon\r\n\r\nPrintIcon.defaultProps = {\r\n    name: 'Print icon',\r\n    componentName: 'PrintIcon',\r\n    description: 'Universal print (play) icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 28.12\r\n\r\nconst PrintingTimeIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M24.4 23.54c-2.65,2.88 -6.4,4.54 -10.34,4.54 -7.76,0 -14.06,-6.29 -14.06,-14.06 0,-7.43 5.77,-13.51 13.07,-14.02l0 14.02c0,0.33 0.17,0.63 0.42,0.81l10.92 8.71z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M15.05 0c7.3,0.51 13.07,6.59 13.07,14.02 0,2.85 -0.87,5.63 -2.48,7.97l-10.59 -8.45 0 -13.55z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PrintingTimeIcon\r\n\r\nPrintingTimeIcon.defaultProps = {\r\n    name: 'Printing Time Icon',\r\n    componentName: 'PrintingTimeIcon',\r\n    description: 'Elapsed printing time icon.',\r\n    tags: [Tag.ICONS, Tag.CONNECT],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst ProgressBarIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M192.31 141.02l-153.85 0c-7.08,0 -12.82,5.74 -12.82,12.82 0,7.08 5.74,12.82 12.82,12.82l153.85 0c7.08,0 12.82,-5.74 12.82,-12.82 0,-7.08 -5.74,-12.82 -12.82,-12.82z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M307.69 153.85c0,-21.24 -17.22,-38.46 -38.46,-38.46l-230.76 0c-21.24,0 -38.46,17.22 -38.46,38.46 0,21.25 17.22,38.46 38.46,38.46l230.77 0c21.24,0 38.46,-17.22 38.46,-38.46l-0 0zm-38.46 -25.64c14.14,0 25.64,11.5 25.64,25.64 0,14.14 -11.5,25.64 -25.64,25.64l-230.77 0c-14.14,0 -25.64,-11.5 -25.64,-25.64 0,-14.14 11.5,-25.64 25.64,-25.64l230.77 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ProgressBarIcon\r\n\r\nProgressBarIcon.defaultProps = {\r\n    name: 'Progress Bar icon',\r\n    componentName: 'ProgressBarIcon',\r\n    description: 'Progress bar icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 1322.56\r\n\r\nconst ProgressIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M1224.72 1007.41c-116.4,189.03 -325.17,315.15 -563.46,315.15 -365.21,0 -661.26,-296.07 -661.26,-661.27 0,-352.46 275.75,-640.47 623.27,-660.16l0 139.2c-270.76,19.46 -484.36,245.24 -484.36,520.95 0,288.49 233.85,522.35 522.35,522.35 185.38,0 348.16,-96.58 440.86,-242.16l122.6 65.94 0 0.02z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M661.24 661.27l0 -661.27c365.21,0 661.26,296.07 661.26,661.27 0,109.34 -27.11,216.97 -78.93,313.26l-582.36 -313.26 0.03 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ProgressIcon\r\n\r\nProgressIcon.defaultProps = {\r\n    name: 'Progress icon',\r\n    componentName: 'ProgressIcon',\r\n    description: 'Progress icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst QualityHighIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M235.29 0L235.29 235.29 0 235.29z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default QualityHighIcon\r\n\r\nQualityHighIcon.defaultProps = {\r\n    name: 'Quality High icon',\r\n    componentName: 'QualityHighIcon',\r\n    description: 'Print quality high icon.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst QualityLowIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M363.64 0l-121.21 0 0 121.21 -121.21 0 0 121.21 -121.21 0 0 121.21c121.21,0 242.38,0 363.59,0l0 -363.55 0.05 -0.09z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default QualityLowIcon\r\n\r\nQualityLowIcon.defaultProps = {\r\n    name: 'Quality Low icon',\r\n    componentName: 'QualityLowIcon',\r\n    description: 'Print quality low icon.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst QualityMediumIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M0 666.72L133.28 666.72 133.28 533.33 266.66 533.33 266.66 400.06 399.94 400.06 399.94 266.66 533.33 266.66 533.33 133.38 666.62 133.38 666.62 0 800 0 799.89 800 0 800z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default QualityMediumIcon\r\n\r\nQualityMediumIcon.defaultProps = {\r\n    name: 'Quality Medium icon',\r\n    componentName: 'QualityMediumIcon',\r\n    description: 'Print quality medium icon.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800\r\n\r\nconst QuestionmarkIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M463.23 280.31c-14.71,-14.71 -36.19,-22.66 -61.24,-22.66 -52.09,0 -85.89,36.98 -85.89,94.64l48.12 0c0,-35.4 19.88,-48.12 36.98,-48.12 15.11,0 31.42,9.94 32.6,29.43 1.58,20.28 -9.15,30.61 -23.07,43.74 -33.8,32.22 -34.59,47.72 -34.2,83.11l48.12 0c-0.4,-15.9 0.79,-28.63 22.27,-52.09 16.31,-17.49 36.19,-39.37 36.58,-72.38 0.4,-22.27 -6.76,-40.96 -20.28,-54.88l0.01 -0.79zm-33.41 239.4c0,16.7 -13.52,29.82 -29.82,29.82 -16.31,0 -29.82,-13.51 -29.82,-29.82 0,-16.7 13.52,-29.82 29.82,-29.82 16.7,0 29.82,13.52 29.82,29.82z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M400 112.5c-158.66,0 -287.5,128.84 -287.5,287.5 0,158.66 128.84,287.5 287.5,287.5 158.66,0 287.5,-128.84 287.5,-287.5 0,-158.66 -128.84,-287.5 -287.5,-287.5zm0 47.72c132.02,0 239.38,107.37 239.38,239.38 0,132.02 -107.37,239.38 -239.38,239.38 -132.02,0 -239.38,-107.37 -239.38,-239.38 0,-132.02 107.37,-239.38 239.38,-239.38z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default QuestionmarkIcon\r\n\r\nQuestionmarkIcon.defaultProps = {\r\n    name: 'Questionmark Icon',\r\n    componentName: 'QuestionmarkIcon',\r\n    description: 'Universal questionmark icon.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst RefreshFolderIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M265.78 199.99c5.5,-2.82 11.59,-4.49 18.18,-4.49 19.84,0 36.42,14.19 40.11,32.94l26.72 -5.43c-6.23,-31.21 -33.74,-54.81 -66.83,-54.81 -13.03,0 -25.13,3.77 -35.48,10.14l-19.04 -23.82 -13.61 68.21 68.2 0 -18.17 -22.74 -0.07 0zm72.7 118.16l-19.04 -23.82c-10.35,6.37 -22.44,10.14 -35.48,10.14 -33.09,0 -60.6,-23.6 -66.83,-54.81l26.72 -5.43c3.69,18.75 20.27,32.94 40.11,32.94 6.59,0 12.74,-1.74 18.17,-4.49l-18.17 -22.74 68.2 0 -13.61 68.21 -0.07 0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M235.01 318.15l-210.12 0 0 -272.67 95.43 0c23.09,26.5 32.29,40.91 54.52,40.91l150.02 0 0 63.86c-8.47,-4.05 -17.59,-6.88 -27.3,-8.25l0 -28.38 -122.73 0c-31.93,0 -48.22,-18.9 -67.05,-40.91l-55.68 0 0 218.15 153.57 0c7.75,11.08 17.74,20.35 29.32,27.3l0 0 0 -0.01z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default RefreshFolderIcon\r\n\r\nRefreshFolderIcon.defaultProps = {\r\n    name: 'Refresh Folder icon',\r\n    componentName: 'RefreshFolderIcon',\r\n    description: 'Icon for updating content of folder for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 25\r\n\r\nconst RemainingTimeIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M21.7 20.93c-2.36,2.56 -5.69,4.04 -9.2,4.04 -6.9,0 -12.5,-5.6 -12.5,-12.5 0,-6.61 5.13,-12.02 11.62,-12.47l0 12.47c0,0.3 0.15,0.56 0.37,0.72l9.71 7.75z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M13.38 0c6.49,0.45 11.62,5.86 11.62,12.47 0,2.54 -0.77,5.01 -2.2,7.09l-9.41 -7.51 0 -12.05z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default RemainingTimeIcon\r\n\r\nRemainingTimeIcon.defaultProps = {\r\n    name: 'Remaining Time Icon',\r\n    componentName: 'RemainingTimeIcon',\r\n    description: 'Remaining printing time icon.',\r\n    tags: [Tag.ICONS, Tag.CONNECT],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst RemoteControlIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} fill-rule=\"nonzero\" d=\"M237.4 104.8c-10.54,0 -19.05,-8.55 -19.05,-19.05 0,-10.54 8.55,-19.05 19.05,-19.05l96.75 0c10.54,0 19.05,8.55 19.05,19.05 0,10.54 -8.55,19.05 -19.05,19.05l-96.75 0zm-91.7 -104.72l280.03 0c14.22,0 27.19,5.87 36.57,15.25l0.09 0.08c9.38,9.42 15.25,22.4 15.25,36.57l0 467.53c0,14.22 -5.87,27.19 -15.29,36.62l0.04 0.04c-9.38,9.38 -22.36,15.25 -36.7,15.25l-280.03 0c-14.3,0 -27.28,-5.87 -36.7,-15.25 -9.38,-9.38 -15.25,-22.36 -15.25,-36.7l0 -467.53c0,-14.3 5.87,-27.28 15.25,-36.7l0.04 0.04c9.42,-9.42 22.4,-15.29 36.62,-15.29l0.09 0.09 -0.01 -0.01zm280.03 47.61l-280.03 0c-1.24,0 -2.32,0.45 -3.01,1.2l0 0.09c-0.79,0.79 -1.28,1.9 -1.28,3.01l0 467.53c0,1.2 0.54,2.23 1.28,3.01 0.79,0.79 1.9,1.28 3.01,1.28l280.03 0c1.2,0 2.23,-0.54 3.01,-1.28l0.08 0c0.7,-0.7 1.2,-1.78 1.2,-3.01l0 -467.53c0,-1.24 -0.46,-2.32 -1.2,-3.01l-0.08 -0.09c-0.7,-0.7 -1.78,-1.2 -3.01,-1.2z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M313.86 480.17c0,-15.52 -12.58,-28.1 -28.1,-28.1 -15.52,0 -28.1,12.58 -28.1,28.1 0,15.52 12.58,28.1 28.1,28.1 15.52,0 28.1,-12.58 28.1,-28.1z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default RemoteControlIcon\r\n\r\nRemoteControlIcon.defaultProps = {\r\n    name: 'Remote Control icon',\r\n    componentName: 'RemoteControlIcon',\r\n    description: 'Icon for printer remote control.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst RestartIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M149.3 277.88c99.71,37.31 183.62,-84.93 112.47,-164.37 -76.27,-85.17 -215.43,1.8 -170.94,107.82 1.81,4.32 3.95,8.55 6.34,12.59l25.5 -17.56 -4.13 75.11 -67.4 -25.88 25.65 -17.68c-52.77,-86.48 12.45,-198.28 115.61,-193.1 111.71,5.61 162.4,145.91 77.81,221.77 -23.36,20.88 -53.63,32.45 -84.97,32.45 -13.51,0 -26.95,-2.16 -39.77,-6.37 0.49,-8.58 0.97,-17.15 1.43,-25.73l2.44 0.93 -0.03 0.03z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default RestartIcon\r\n\r\nRestartIcon.defaultProps = {\r\n    name: 'Restart icon',\r\n    componentName: 'RestartIcon',\r\n    description: 'Icon for printer restart action.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst ScanMeArrowIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M124.61 221.66c-2.1,-1.59 -4.44,-2.85 -6.92,-3.74 -2.92,-1.15 -5.31,-1.39 -7.93,-3.49 10.26,-3.59 14.66,-1.04 27.94,-12.68 22.61,-19.81 35.39,-51.29 40.28,-91.71 5.72,-47.24 -18.84,-85.78 -42.36,-101.52 -5.32,-3.57 -19.09,-10.3 -24.2,-8.1 -1.68,0.72 -1.08,0.39 -1.79,1.67 3.85,5.01 22.07,10.36 37.35,31.23 11.89,16.22 20.4,40.44 18.32,67.94 -0.55,10.48 -2.41,20.88 -5.5,30.9 -8.2,30.38 -28.88,52.87 -50.8,59.41 -5.58,1.66 -14.25,5.03 -18.91,3.19 4.6,-2.18 22.38,-11.92 22.63,-20.17 0.56,-18.77 -25.61,5.05 -34.86,10.9 -9.15,5.79 -23.71,8.9 -21.07,20.75 1.27,5.66 7.68,6.28 14.14,9.04 6.75,2.88 12.99,6.03 19.78,8.74 7.46,2.98 12.9,5.12 19.97,8.06 5.77,2.4 17.73,9.48 13.92,-10.42l0.01 -0.01z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ScanMeArrowIcon\r\n\r\nScanMeArrowIcon.defaultProps = {\r\n    name: 'Scan Me Arrow icon',\r\n    componentName: 'ScanMeArrowIcon',\r\n    description: 'Hand drawn arrow used with QR codes.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst ScreensaverTimeoutIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M298.57 92.95l17.01 -17.01 17.01 17.01 -15.89 15.89c-5.63,-5.88 -11.63,-11.13 -18.14,-16.01l0 0 0 0.12zm-143 75.31l-121.98 0 0 72.43 121.98 0 0 -72.43zm-133.98 -24.14l158.13 0 0 120.72 -170.27 0 0 -120.72 12.01 0 0.13 0zm315.13 60.3c0,66.68 -54.05,120.72 -120.73,120.72 -33.65,0 -63.93,-13.89 -85.82,-36.16l39.53 0c13.76,7.63 29.4,12.01 46.29,12.01 53.29,0 96.58,-43.29 96.58,-96.58 0,-53.29 -43.29,-96.58 -96.58,-96.58 -16.76,0 -32.53,4.5 -46.29,12.01l-39.53 0c21.89,-22.27 52.17,-36.16 85.82,-36.16 66.68,0 120.73,54.05 120.73,120.73l0 0 0 0.01zm-144.87 -136.49l0 -32.53 48.29 0 0 32.53c-17.39,-2.88 -31.27,-2.88 -48.29,0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M239.01 196.53l31.78 -48.54 -5.5 -4.88 -44.29 37.41c-8.13,-1.63 -16.89,0.87 -22.89,7.51 -8.88,9.88 -8.01,25.15 1.87,34.03 10.01,8.88 25.15,8.01 34.03,-1.87 5.88,-6.63 7.38,-15.64 4.88,-23.52l0 0 0.12 -0.13z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ScreensaverTimeoutIcon\r\n\r\nScreensaverTimeoutIcon.defaultProps = {\r\n    name: 'Screensaver Timeout icon',\r\n    componentName: 'ScreensaverTimeoutIcon',\r\n    description: 'Screensaver Timeout Icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.7\r\n\r\nconst SensorIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M211.3 38.46l-18.98 19.26c17.9,14.11 29.26,34.7 29.26,57.67 0,22.96 -11.36,43.55 -29.26,57.67l18.98 19.26c23.84,-18.81 38.97,-46.26 38.97,-76.92 0,-30.67 -15.11,-58.12 -38.97,-76.92zm-133.82 173.03l-19 19.3c-35.78,-28.22 -58.48,-69.4 -58.48,-115.4 0,-46 22.69,-87.18 58.48,-115.39l19 19.28c-29.82,23.52 -48.77,57.85 -48.77,96.1 0,38.26 18.95,72.58 48.77,96.1l0 0zm8.65 -96.11c0,-22.96 11.37,-43.55 29.26,-57.67l-18.99 -19.26c-23.84,18.81 -38.97,46.26 -38.97,76.92 0,30.67 15.13,58.12 38.97,76.92l18.99 -19.26c-17.9,-14.12 -29.26,-34.7 -29.26,-57.67zm163.09 -115.38l-19 19.28c29.82,23.52 48.77,57.85 48.77,96.1 0,38.26 -18.95,72.58 -48.77,96.1l19 19.3c35.78,-28.22 58.48,-69.4 58.48,-115.4 0,-46 -22.69,-87.18 -58.48,-115.39l0 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M192.31 115.39c0,-21.24 -17.23,-38.46 -38.46,-38.46 -21.23,0 -38.46,17.22 -38.46,38.46 0,16.72 10.74,30.81 25.64,36.1l0 156.21 25.64 0 0 -156.21c14.9,-5.3 25.64,-19.39 25.64,-36.1z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SensorIcon\r\n\r\nSensorIcon.defaultProps = {\r\n    name: 'Sensor icon',\r\n    componentName: 'SensorIcon',\r\n    description: 'Icon for sensor settings for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.65\r\n\r\nconst SettingsIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M181.82 120.79c-33.69,0 -61.04,27.35 -61.04,61.04 0,33.71 27.35,61.04 61.04,61.04 33.69,0 61.04,-27.35 61.04,-61.04 0,-33.69 -27.35,-61.04 -61.04,-61.04zm0 24.45c20.17,0 36.58,16.44 36.58,36.59 0,20.17 -16.44,36.59 -36.58,36.59 -20.17,0 -36.59,-16.44 -36.59,-36.59 0,-20.17 16.44,-36.59 36.59,-36.59z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M334.56 209.66l0 -55.66c-27.4,-9.82 -34.75,-10.24 -38.5,-19.48 -3.89,-9.23 1.01,-14.85 13.57,-41.11l-39.38 -39.38c-25.81,12.27 -31.74,17.32 -41.11,13.57 -9.23,-3.89 -9.82,-11.26 -19.48,-38.5l-55.67 0c-9.66,27.27 -10.24,34.75 -19.48,38.5 -9.52,4.04 -15.3,-1.3 -41.11,-13.57l-39.38 39.38c12.4,26.1 17.32,31.75 13.57,41.11 -3.89,9.23 -11.25,9.66 -38.5,19.48l0 55.66c27.27,9.66 34.75,10.24 38.5,19.48 3.89,9.37 -1.01,14.85 -13.57,41.11l39.38 39.38c25.54,-12.11 31.45,-17.46 41.11,-13.57 9.23,3.89 9.66,11.26 19.48,38.5l55.67 0c9.66,-27.12 10.24,-34.62 19.61,-38.66 9.53,-3.88 15.14,1.3 40.98,13.57l39.38 -39.38c-12.4,-26.1 -17.32,-31.75 -13.57,-41.11 3.89,-9.23 11.25,-9.66 38.5,-19.48l0 0 0 0.13 0 0.03zm-62.16 9.79c-7.35,17.75 -0.88,31.29 6.2,45.58l-13.84 13.86c-14,-6.92 -27.54,-13.7 -45.58,-6.2 -17.75,7.34 -22.8,21.5 -27.83,36.64l-19.48 0c-5.06,-15.14 -10.09,-29.27 -27.83,-36.64 -18.04,-7.5 -31.88,-0.59 -45.58,6.2l-13.86 -13.86c7.08,-14.29 13.57,-27.83 6.2,-45.58 -7.34,-17.75 -21.5,-22.8 -36.64,-27.83l0 -19.48c15.14,-5.05 29.27,-10.08 36.64,-27.83 7.35,-17.75 0.88,-31.29 -6.2,-45.58l13.86 -13.84c13.84,6.78 27.54,13.7 45.58,6.2 17.75,-7.34 22.78,-21.5 27.83,-36.64l19.48 0c5.05,15.14 10.08,29.27 27.83,36.64 18.04,7.5 31.88,0.59 45.58,-6.2l13.84 13.84c-7.08,14.29 -13.57,27.83 -6.2,45.58 7.34,17.75 21.5,22.8 36.64,27.83l0 19.48c-15.14,5.06 -29.27,10.09 -36.64,27.83l0 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SettingsIcon\r\n\r\nSettingsIcon.defaultProps = {\r\n    name: 'Settings icon',\r\n    componentName: 'SettingsIcon',\r\n    description: 'Universal settings icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.36\r\n\r\nconst SmallArrowDownIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M285.71 499.94L571.36 71.42 0 71.42z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SmallArrowDownIcon\r\n\r\nSmallArrowDownIcon.defaultProps = {\r\n    name: 'Small arrow down icon',\r\n    componentName: 'SmallArrowDownIcon',\r\n    description: 'Small arrow down icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.BLACK,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3997.6\r\n\r\nconst SmallArrowUpIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M1999 499.7L3997.6 3497.9 0 3497.9z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SmallArrowUpIcon\r\n\r\nSmallArrowUpIcon.defaultProps = {\r\n    name: 'Small arrow up icon',\r\n    componentName: 'SmallArrowUpIcon',\r\n    description: 'Small arrow up icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.BLACK ,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.66\r\n\r\nconst SpeedIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M153.83 269.21c-16.59,0 -30.03,-13.44 -30.03,-30.03 0,-11.32 6.27,-21.18 15.51,-26.29l14.52 -71.87 14.53 71.85c9.25,5.12 15.51,14.97 15.51,26.29 0,16.6 -13.44,30.05 -30.04,30.05l0 0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M307.66 192.29c0,28 -7.51,54.27 -20.64,76.9l-22.25 -12.86c10.91,-18.86 17.25,-40.69 17.25,-64.05 0,-70.8 -57.39,-128.19 -128.19,-128.19 -70.8,0 -128.19,57.39 -128.19,128.19 0,23.36 6.35,45.19 17.25,64.05l-22.25 12.86c-13.13,-22.64 -20.64,-48.91 -20.64,-76.9 0,-84.82 69.01,-153.83 153.83,-153.83 84.82,0 153.83,69.01 153.83,153.83l-0 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SpeedIcon\r\n\r\nSpeedIcon.defaultProps = {\r\n    name: 'Speed icon',\r\n    componentName: 'SpeedIcon',\r\n    description: 'Speed icon for FDM printers.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.1\r\n\r\nconst SpoolIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M400.06 48.03c-194.43,0 -352.05,157.61 -352.05,352.04 0,65.23 17.74,126.3 48.67,178.67l0 -178.67 0 -0.73c0.4,-167.21 136.08,-302.64 303.35,-302.64 269.41,0 405.15,327.26 214.51,517.89 -144.67,144.71 -368.03,101.35 -467.31,-45.75l0 76.2c63.98,66.02 153.6,107.06 252.79,107.06 194.43,0 352.05,-157.61 352.05,-352.05 0,-194.43 -157.61,-352.05 -352.05,-352.05l0.03 0.03zm93.18 258.87c-82.76,-82.79 -224.91,-23.88 -224.91,93.18 0,117.03 142.15,175.96 224.91,93.18 51.43,-51.46 51.47,-134.88 0,-186.32l0 -0.04zm-93.18 -1.64c-52.34,0 -94.78,42.44 -94.78,94.78 0,52.34 42.44,94.78 94.78,94.78 52.34,0 94.79,-42.44 94.79,-94.78 0,-52.34 -42.45,-94.78 -94.79,-94.78z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M400.06 96.7c269.42,0 405.16,327.26 214.52,517.89 -144.67,144.71 -368.03,101.35 -467.31,-45.75l0 156.22c0,13.97 -11.33,25.28 -25.28,25.28 -13.97,0 -25.28,-11.33 -25.28,-25.28l0 -324.97 0 -0.73c0.4,-167.21 136.08,-302.65 303.35,-302.65l0 -0zm93.18 210.2c-82.76,-82.79 -224.91,-23.88 -224.91,93.18 0,117.03 142.15,175.96 224.91,93.18 51.43,-51.46 51.47,-134.88 0,-186.32l0 -0.04z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SpoolIcon\r\n\r\nSpoolIcon.defaultProps = {\r\n    name: 'Spool icon',\r\n    componentName: 'SpoolIcon',\r\n    description: 'Filament spool icon.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}\r\n\r\n","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.4\r\n\r\nconst StopIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M285.7 0c-157.78,0 -285.7,127.93 -285.7,285.7 0,157.78 127.93,285.7 285.7,285.7 157.78,0 285.7,-127.93 285.7,-285.7 0,-157.78 -127.92,-285.7 -285.7,-285.7zm0 47.63c131.23,0 238.07,106.84 238.07,238.07 0,131.23 -106.84,238.07 -238.07,238.07 -131.23,0 -238.07,-106.84 -238.07,-238.07 0,-131.23 106.84,-238.07 238.07,-238.07z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M166.67 166.66L404.75 166.66 404.75 404.73 166.67 404.73z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default StopIcon\r\n\r\nStopIcon.defaultProps = {\r\n    name: 'Stop icon',\r\n    componentName: 'StopIcon',\r\n    description: 'Universal Stop icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.69\r\n\r\nconst SwitchOffIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M77.12 230.71l153.72 0c42.44,-0 76.86,-34.42 76.86,-76.87 0,-42.44 -34.42,-76.86 -76.86,-76.86l-154.21 0c-42.35,0.13 -76.61,34.51 -76.61,76.86 0,42.44 34.42,76.86 76.86,76.86 0.08,0 0.18,0 0.25,0l0 0zm0 -26.77c27.67,0 50.09,-22.43 50.09,-50.09 0,-27.67 -22.43,-50.09 -50.09,-50.09 -27.66,0 -50.09,22.43 -50.09,50.09 0,27.66 22.43,50.09 50.09,50.09z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SwitchOffIcon\r\n\r\nSwitchOffIcon.defaultProps = {\r\n    name: 'Switch off icon',\r\n    componentName: 'SwitchOffIcon',\r\n    description: 'Switch icon at off state for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.36\r\n\r\nconst SwitchOnIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M428.16 428.41l-285.44 0c-78.81,-0.01 -142.73,-63.92 -142.73,-142.74 0,-78.81 63.92,-142.73 142.73,-142.73l286.36 0c78.65,0.24 142.27,64.08 142.27,142.73 0,78.81 -63.92,142.73 -142.73,142.73 -0.14,0 -0.33,0 -0.47,0l0 0.01zm0 -49.72c-51.37,0 -93.02,-41.65 -93.02,-93.02 0,-51.37 41.65,-93.02 93.02,-93.02 51.37,0 93.02,41.65 93.02,93.02 0,51.37 -41.65,93.02 -93.02,93.02z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SwitchOnIcon\r\n\r\nSwitchOnIcon.defaultProps = {\r\n    name: 'Switch on icon',\r\n    componentName: 'SwitchOnIcon',\r\n    description: 'Switch icon at on state for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst TemperatureIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M1999.24 0c-322.2,0 -583.06,260.86 -583.06,583.06l0 1254.48c0,97.76 -43.14,190.74 -117.28,254.12 -233.9,198.86 -382.18,494.1 -382.18,825.06 0,598.62 484.66,1083.28 1083.28,1083.28 598.62,0 1083.28,-484.66 1083.28,-1083.28 0,-330.96 -148.98,-626.2 -382.18,-825.06 -74.84,-63.38 -117.28,-156.42 -117.28,-254.12l0 -1254.48c0,-322.2 -260.86,-583.06 -583.06,-583.06l0 0 -1.52 0zm0 333.66c137.52,0 250.08,111.88 250.08,250.08l0 1254.5c0,261.54 85.6,380.84 235.28,508.28 168.5,142.92 264.94,351.18 264.94,570.96 0,413.22 -336.38,750.24 -750.24,750.24 -413.22,0 -750.22,-336.38 -750.22,-750.24 0,-219.78 96.36,-428.04 264.94,-570.96 149.66,-126.74 235.28,-246.74 235.28,-508.28l0 -1254.5c0,-137.5 111.86,-250.08 250.08,-250.08l0 0 -0.14 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M2350.42 2452.98c-168.5,-148.28 -267.58,-289.2 -267.58,-536.58l0 -1083.26 -166.5 0 0 1083.26c0,247.38 -99.78,388.98 -267.58,536.58 -132.1,116.6 -231.88,273.7 -231.88,463.74 0,322.2 260.86,583.06 583.06,583.06 322.2,0 583.06,-260.86 583.06,-583.06 0,-190.1 -99.78,-347.14 -231.88,-463.74l0 0 -0.7 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default TemperatureIcon\r\n\r\nTemperatureIcon.defaultProps = {\r\n    name: 'Temperature icon',\r\n    componentName: 'TemperatureIcon',\r\n    description: 'Temperature icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 571.43\r\n\r\nconst TimeIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M301.58 285.71L301.58 190.32 269.78 190.32 269.78 317.51 381.04 317.51 381.04 285.71z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M140.5 140.51c37.17,-37.17 88.52,-60.16 145.21,-60.16 56.71,0 108.05,22.99 145.2,60.15 37.17,37.17 60.16,88.52 60.16,145.21 0,56.71 -22.99,108.05 -60.15,145.2 -37.17,37.17 -88.52,60.16 -145.21,60.16 -56.71,0 -108.05,-22.99 -145.2,-60.15 -37.17,-37.17 -60.16,-88.52 -60.16,-145.21 0,-56.71 22.99,-108.05 60.15,-145.2zm261.5 28.84c-29.79,-29.79 -70.93,-48.26 -116.29,-48.26 -45.36,0 -86.49,18.46 -116.29,48.26 -29.79,29.79 -48.25,70.93 -48.25,116.29 0,45.36 18.46,86.5 48.25,116.29 29.79,29.79 70.93,48.25 116.29,48.25 45.36,0 86.5,-18.46 116.29,-48.25 29.79,-29.79 48.25,-70.93 48.25,-116.29 0,-45.35 -18.46,-86.49 -48.25,-116.29z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default TimeIcon\r\n\r\nTimeIcon.defaultProps = {\r\n    name: 'Time icon',\r\n    componentName: 'TimeIcon',\r\n    description: 'Time icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst TouchscreenIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M1956.04 3007.1c134.66,45.32 551.34,160.62 1034.1,520.22l894.28 -637.94c-231.84,-325.22 -168.12,-552.72 -398.52,-876.02 -116.24,-162.86 -195.66,-207.22 -295.44,-207.22 -35.22,0 -73.06,5.64 -115.96,13.44l81.16 113.72c49.02,68.5 -54.48,142.34 -103.44,73.66l-72.38 -101.5c-23.84,-33.64 -57.18,-44.96 -95.44,-44.96 -55.24,0 -120.54,23.72 -182.7,37.94l98.46 138.04c48.66,68.52 -54.46,142.34 -103.42,73.66l-85.34 -119.58c-23.72,-33.3 -56.52,-44.86 -93.8,-44.86 -57.5,0 -126,27.24 -189.92,43.4l104.1 146.04c49.02,68.68 -54.96,142.04 -103.42,73.64l-422.44 -591.34c-130.84,-183.78 -418.24,11.2 -282.62,201.6l623.72 874.44c-66.94,-24.62 -184.46,-47.26 -261.32,-47.26 -237.12,0.48 -328.44,260.66 -29.6,360.94l-0.06 -0.06z\" />\r\n                <path fill={secondaryColor?.toString()} fillRule=\"nonzero\" d=\"M128.12 558.48l3201.16 0c70.76,0 128.12,57.38 128.12,128.12l0 1133.64c-23.24,-22.56 -45.94,-41.2 -68.56,-56.4 -62.82,-42.18 -122.44,-58.46 -187.68,-60.04l0 -889.08 -2944.92 0 0 1877.86 1442.6 0c-15.08,25.72 -25.36,53.5 -30.32,82.3 -1.7,9.86 -2.8,19.92 -3.22,29.9l5.38 61.84c3.82,17.38 9.7,34.68 17.56,51.76 4.78,10.28 10.28,20.44 16.64,30.44l-1576.76 0c-70.76,0 -128.12,-57.38 -128.12,-128.12l0 -2134.1c0,-70.74 57.36,-128.12 128.12,-128.12z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default TouchscreenIcon\r\n\r\nTouchscreenIcon.defaultProps = {\r\n    name: 'Touchscreen icon',\r\n    componentName: 'TouchscreenIcon',\r\n    description: 'Icon for touchscreen settings for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst UsbFlashDriveIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M36.9 63.75l14.85 0 112.36 0 7.98 0 0 8.32 53.86 0 0 91.08 -53.86 0 0 8.32 -7.98 0c-1.04,0 -111.35,0.01 -112.36,0.02 -13.91,0.1 -25.56,0.63 -34.31,-8.13 -4.98,-4.98 -8.09,-11.87 -8.09,-19.45l0 -52.62c0,-15.16 12.39,-27.55 27.55,-27.55l0 -0.01zm151.61 60.86l15.71 0 0 18.85 -15.71 0 0 -18.85zm0 -32.83l15.71 0 0 18.85 -15.71 0 0 -18.85zm-16.4 -11.71l0 75.12 45.88 0 0 -75.12 -45.88 0zm-7.98 -8.55c-1.18,0 -111.22,0 -112.36,0 -11.48,0 -21.58,-1.11 -28.67,5.98 -3.55,3.55 -5.75,8.45 -5.75,13.82l0 52.62c0,10.77 8.8,19.58 19.58,19.58l14.85 0 112.36 0 0 -92 -0 -0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default UsbFlashDriveIcon\r\n\r\nUsbFlashDriveIcon.defaultProps = {\r\n    name: 'USB Flash Drive icon',\r\n    componentName: 'UsbFlashDriveIcon',\r\n    description: 'USB Flash Drive icon.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 363.64\r\n\r\nconst WaitingIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M280.54 107.85c14.55,-17.36 22.47,-39.06 22.47,-61.14l0 -46.71 -242.38 0 0 46.71c0,22.08 8.04,43.78 22.47,61.14l46.71 55.78c8.55,10.21 8.68,24.64 0.13,34.97l-47.36 57.44c-14.16,17.23 -21.95,38.67 -21.95,60.5l0 47.1 242.38 0 0 -47.1c0,-21.83 -7.79,-43.27 -21.95,-60.5l-47.36 -57.44c-8.55,-10.34 -8.42,-24.64 0.13,-34.97l46.71 -55.78 0 0zm-70.33 109.9l47.36 57.44c9.83,12 15.06,37.65 15.06,54.37l-181.76 0c0,-16.72 5.23,-42.37 15.06,-54.24l47.36 -57.44c17.74,-21.44 17.61,-52.46 -0.26,-73.65l-46.71 -55.78c-9.96,-11.87 -15.44,-37.78 -15.44,-54.37l181.76 0c0,16.72 -5.49,42.5 -15.44,54.37l-46.71 55.78c-17.87,21.32 -17.99,52.33 -0.26,73.65l-0.01 -0.13z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M132.23 119.22l99.3 -0.26 -21.06 25.15c-8.81,10.59 -13.4,23.61 -13.4,36.51l-30.51 0c-0.13,-13.02 -4.6,-25.91 -13.4,-36.51l-20.81 -24.89 -0.13 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default WaitingIcon\r\n\r\nWaitingIcon.defaultProps = {\r\n    name: 'Waiting icon',\r\n    componentName: 'WaitingIcon',\r\n    description: 'Waiting icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 307.7\r\n\r\nconst WarningIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M153.85 253.72c-8.83,0 -16.02,-7.18 -16.02,-16.02 0,-8.84 7.19,-16.02 16.02,-16.02 8.83,0 16.02,7.18 16.02,16.02 0,8.84 -7.19,16.02 -16.02,16.02zm-12.82 -125l25.64 0 0 76.92 -25.64 0 0 -76.92z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M153.85 13.33l-153.85 282.05 307.69 0 -153.85 -282.05zm0 53.55l110.65 202.86 -221.31 0 110.65 -202.86 0 -0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default WarningIcon\r\n\r\nWarningIcon.defaultProps = {\r\n    name: 'Warning icon',\r\n    componentName: 'WarningOnIcon',\r\n    description: 'Warning icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst WifiIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M23.4 105.15c24.06,-25.64 57.46,-41.42 94.27,-41.42 36.81,0 70.08,15.78 94.27,41.42l23.4 -24.85c-30.11,-31.95 -71.66,-51.67 -117.67,-51.67 -46.02,0 -87.56,19.72 -117.67,51.67l23.4 24.85z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M63.37 147.62c13.93,-14.73 33.13,-23.8 54.3,-23.8 21.17,0 40.36,9.07 54.3,23.8l22.88 -24.19c-19.72,-20.91 -46.94,-33.92 -77.04,-33.92 -30.11,0 -57.33,12.89 -77.04,33.92l22.88 24.19 0 0 -0.26 0z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M80.46 165.76c9.47,-10.12 22.62,-16.3 37.08,-16.3 14.46,0 27.61,6.18 37.07,16.3l-37.07 39.44 -37.08 -39.44z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default WifiIcon\r\n\r\nWifiIcon.defaultProps = {\r\n    name: 'Wifi icon',\r\n    componentName: 'WifiIcon',\r\n    description: 'Universal Wifi icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3996.8\r\n\r\nconst ZaxisIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M757.89 1504.68L1050.28 1212.13 1998.4 2177.34 2945.74 1212.13 3238.11 1504.68 1998.4 2762.23z\" />\r\n                <path fill={primaryColor?.toString()} fillRule=\"nonzero\" d=\"M-0 3443.73l3996.8 0 0 553.08 -3996.8 0 0 -553.08zm1492.11 -2259.73l701.78 -848.54 -682.55 0 0 -211.81 960.75 0 0 181.91 -679.08 848.72 684.31 0 0 211.81 -985.21 0 0 -182.09z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ZaxisIcon\r\n\r\nZaxisIcon.defaultProps = {\r\n    name: 'Z axis icon',\r\n    componentName: 'ZaxisIcon',\r\n    description: 'Z axis icon for FDM printers.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}"],"sourceRoot":""}