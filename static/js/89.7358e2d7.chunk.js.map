{"version":3,"sources":["lib/icons/SpoolIcon.tsx","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts"],"names":["SpoolIcon","props","useState","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","backgroundColor","setBackgroundColor","useEffect","ThemeSwitcherDuoColor","theme","withBackground","withPadding","viewBox","width","height","backgroundRounded","backgroundRadius","fill","toString","d","defaultProps","name","componentName","description","tags","Tag","ICONS","MINI","folder","Folder","Theme","LIGHT","Color","DARK_GRAY","ORANGE","WHITE","DefaultRadiusRatio","Scale","padding","Math","round","DefaultPaddingRatio","transform","abs","rx","ry","background","children","Svg","xmlns","fillRule","clipRule","imageRendering","shapeRendering","textRendering","ThemeSwitcherMonoColor","CUSTOM","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor"],"mappings":"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","file":"static/js/89.7358e2d7.chunk.js","sourcesContent":["import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.1\r\n\r\nconst SpoolIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M400.06 48.03c-194.43,0 -352.05,157.61 -352.05,352.04 0,65.23 17.74,126.3 48.67,178.67l0 -178.67 0 -0.73c0.4,-167.21 136.08,-302.64 303.35,-302.64 269.41,0 405.15,327.26 214.51,517.89 -144.67,144.71 -368.03,101.35 -467.31,-45.75l0 76.2c63.98,66.02 153.6,107.06 252.79,107.06 194.43,0 352.05,-157.61 352.05,-352.05 0,-194.43 -157.61,-352.05 -352.05,-352.05l0.03 0.03zm93.18 258.87c-82.76,-82.79 -224.91,-23.88 -224.91,93.18 0,117.03 142.15,175.96 224.91,93.18 51.43,-51.46 51.47,-134.88 0,-186.32l0 -0.04zm-93.18 -1.64c-52.34,0 -94.78,42.44 -94.78,94.78 0,52.34 42.44,94.78 94.78,94.78 52.34,0 94.79,-42.44 94.79,-94.78 0,-52.34 -42.45,-94.78 -94.79,-94.78z\" />\r\n                <path fill={secondaryColor?.toString()} d=\"M400.06 96.7c269.42,0 405.16,327.26 214.52,517.89 -144.67,144.71 -368.03,101.35 -467.31,-45.75l0 156.22c0,13.97 -11.33,25.28 -25.28,25.28 -13.97,0 -25.28,-11.33 -25.28,-25.28l0 -324.97 0 -0.73c0.4,-167.21 136.08,-302.65 303.35,-302.65l0 -0zm93.18 210.2c-82.76,-82.79 -224.91,-23.88 -224.91,93.18 0,117.03 142.15,175.96 224.91,93.18 51.43,-51.46 51.47,-134.88 0,-186.32l0 -0.04z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default SpoolIcon\r\n\r\nSpoolIcon.defaultProps = {\r\n    name: 'Spool icon',\r\n    componentName: 'SpoolIcon',\r\n    description: 'Filament spool icon.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}\r\n\r\n","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}"],"sourceRoot":""}