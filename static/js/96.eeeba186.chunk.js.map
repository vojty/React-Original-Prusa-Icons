{"version":3,"sources":["lib/icons/UsbFlashDriveIcon.tsx","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts"],"names":["UsbFlashDriveIcon","props","useState","primaryColor","setPrimaryColor","backgroundColor","setBackgroundColor","useEffect","ThemeSwitcherMonoColor","theme","withBackground","withPadding","viewBox","width","height","backgroundRounded","backgroundRadius","fill","toString","d","defaultProps","name","componentName","description","tags","Tag","ICONS","MINI","SL1","folder","Folder","Theme","LIGHT","Color","DARK_GRAY","WHITE","DefaultRadiusRatio","Scale","padding","Math","round","DefaultPaddingRatio","transform","abs","rx","ry","background","children","Svg","xmlns","fillRule","clipRule","imageRendering","shapeRendering","textRendering","CUSTOM","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor","ORANGE","ThemeSwitcherDuoColor","setSecondaryColor"],"mappings":"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","file":"static/js/96.eeeba186.chunk.js","sourcesContent":["import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 235.29\r\n\r\nconst UsbFlashDriveIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M36.9 63.75l14.85 0 112.36 0 7.98 0 0 8.32 53.86 0 0 91.08 -53.86 0 0 8.32 -7.98 0c-1.04,0 -111.35,0.01 -112.36,0.02 -13.91,0.1 -25.56,0.63 -34.31,-8.13 -4.98,-4.98 -8.09,-11.87 -8.09,-19.45l0 -52.62c0,-15.16 12.39,-27.55 27.55,-27.55l0 -0.01zm151.61 60.86l15.71 0 0 18.85 -15.71 0 0 -18.85zm0 -32.83l15.71 0 0 18.85 -15.71 0 0 -18.85zm-16.4 -11.71l0 75.12 45.88 0 0 -75.12 -45.88 0zm-7.98 -8.55c-1.18,0 -111.22,0 -112.36,0 -11.48,0 -21.58,-1.11 -28.67,5.98 -3.55,3.55 -5.75,8.45 -5.75,13.82l0 52.62c0,10.77 8.8,19.58 19.58,19.58l14.85 0 112.36 0 0 -92 -0 -0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default UsbFlashDriveIcon\r\n\r\nUsbFlashDriveIcon.defaultProps = {\r\n    name: 'USB Flash Drive icon',\r\n    componentName: 'UsbFlashDriveIcon',\r\n    description: 'USB Flash Drive icon.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}"],"sourceRoot":""}