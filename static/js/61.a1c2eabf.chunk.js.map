{"version":3,"sources":["lib/icons/NozzleSimpleIcon.tsx","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts"],"names":["NozzleSimpleIcon","props","useState","primaryColor","setPrimaryColor","backgroundColor","setBackgroundColor","useEffect","ThemeSwitcherMonoColor","theme","withBackground","withPadding","viewBox","width","height","backgroundRounded","backgroundRadius","fill","toString","d","defaultProps","name","componentName","description","tags","Tag","ICONS","MINI","folder","Folder","Theme","LIGHT","Color","DARK_GRAY","WHITE","DefaultRadiusRatio","Scale","padding","Math","round","DefaultPaddingRatio","transform","abs","rx","ry","background","children","Svg","xmlns","fillRule","clipRule","imageRendering","shapeRendering","textRendering","CUSTOM","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor","ORANGE","ThemeSwitcherDuoColor","setSecondaryColor"],"mappings":"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","file":"static/js/61.a1c2eabf.chunk.js","sourcesContent":["import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.06\r\n\r\nconst NozzleSimpleIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M139.99 43.48c0.01,-14.73 11.96,-26.68 26.69,-26.68 14.73,0 26.68,11.95 26.68,26.68l-0.01 221.04 413.37 0 0 -221.04c0,-14.73 11.95,-26.68 26.68,-26.68 14.73,0 26.68,11.95 26.68,26.68l0 221.04 113.3 0c14.73,0.03 26.65,11.96 26.68,26.68l0.01 264.94c-0.03,14.71 -11.96,26.64 -26.69,26.67l-125.46 0.01 -161.77 189.46c-5.01,6.84 -12.97,10.9 -21.45,10.96l-129.17 0.01c-7.8,-0.09 -15.19,-3.54 -20.26,-9.47l-163.12 -190.96 -125.46 0c-14.72,-0.04 -26.65,-11.97 -26.67,-26.69l-0.02 -264.93c0.04,-14.72 11.97,-26.65 26.69,-26.68l113.3 -0 0 -221.04zm409.99 486.15l0 -211.59 -299.9 0 0 211.59 299.9 0zm53.36 -211.59l0 211.59 143.36 0 0 -211.59 -143.36 0zm-406.78 211.59l0 -211.59 -143.36 0 0 211.59 143.36 0zm25.5 53.36l125.47 146.91 104.86 -0 125.47 -146.91 -355.62 0.01 -0.17 0z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default NozzleSimpleIcon\r\n\r\nNozzleSimpleIcon.defaultProps = {\r\n    name: 'Nozzle simple icon',\r\n    componentName: 'NozzleSimpleIcon',\r\n    description: 'Nozzle icon for Live adjust Z caibration. ',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}"],"sourceRoot":""}