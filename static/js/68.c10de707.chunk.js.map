{"version":3,"sources":["lib/icons/PreheatIcon.tsx","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts"],"names":["PreheatIcon","props","useState","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","backgroundColor","setBackgroundColor","useEffect","ThemeSwitcherDuoColor","theme","withBackground","viewBox","width","height","withPadding","backgroundRounded","backgroundRadius","fill","toString","d","defaultProps","name","componentName","description","tags","Tag","ICONS","MINI","folder","Folder","Theme","LIGHT","Color","DARK_GRAY","ORANGE","TRANSPARENT","DefaultRadiusRatio","Scale","padding","Math","round","DefaultPaddingRatio","transform","abs","rx","ry","background","children","Svg","xmlns","fillRule","clipRule","imageRendering","shapeRendering","textRendering","ThemeSwitcherMonoColor","CUSTOM","WHITE","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor"],"mappings":"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","file":"static/js/68.c10de707.chunk.js","sourcesContent":["import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.05\r\n\r\nconst PreheatIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M302.7 611.01c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.17,-15.71 17.75,-31.43 17.75,-46.63 0,-31.94 -23.32,-63.37 -53.74,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.26,102.4l45.62 -44.1 -0.5 0zm288.43 0c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.16,-15.71 17.74,-31.43 17.74,-46.63 0,-31.94 -23.32,-63.37 -53.73,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.25,102.4l45.63 -44.1 -0.51 0zm-145.99 0c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.16,-15.71 17.74,-31.43 17.74,-46.63 0,-31.94 -23.32,-63.37 -53.74,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.25,102.4l45.63 -44.1 -0.51 0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M566.18 32l0 124.4 -108.1 140.72 -89.37 0 -108.08 -140.72 0 -124.4 67.62 0 0 101.45 73.08 96.03 23.55 0 73.67 -96.03 0 -101.45 67.64 0zm-421.64 665.59l510.97 0 0 70.46 -510.97 0 0 -70.46z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PreheatIcon\r\n\r\nPreheatIcon.defaultProps = {\r\n    name: 'Preheat icon',\r\n    componentName: 'PreheatIcon',\r\n    description: 'Preheating nozzle and heated bed.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.TRANSPARENT,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}\r\n\r\n","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}"],"sourceRoot":""}